{"version":3,"sources":["packages/react-stateful/src/model.ts","packages/react-stateful/src/stateful.ts","packages/react-pangul-core/src/domain/userContext.ts","packages/react-pangul-app/src/components/layout/layoutTheme/layoutTheme.tsx","packages/react-pangul-core/src/infrastructure/providers/provider.ts","packages/react-pangul-core/src/providers/loggerProvider.ts","packages/react-pangul-core/src/infrastructure/providers/providerFactory.ts","packages/react-pangul-core/src/infrastructure/fetch/standardError.ts","packages/react-pangul-core/src/infrastructure/fetch/ajaxFetch.ts","packages/react-pangul-core/src/infrastructure/logger/consoleLogger.ts","packages/react-pangul-core/src/infrastructure/providers/providerSingleton.ts","packages/react-pangul-core/src/providers/fetchProvider.ts","packages/react-pangul-app/src/infrastructure/service/settingsProvider.ts","packages/react-pangul-core/src/infrastructure/baseController.ts","packages/react-pangul-app/src/components/topic/topicLink/topicLink.tsx","packages/react-pangul-core/src/controllers/authController.ts","packages/react-pangul-core/src/services/authService.ts","packages/react-pangul-app/src/components/common/loaders/pageLoader.tsx","packages/react-pangul-app/src/components/layout/layoutContentContainer/layoutContentContainer.tsx","packages/react-pangul-app/src/components/common/errors/errorNotice/errorNotice.tsx","packages/react-pangul-app/src/components/layout/layoutFormContainer/layoutFormContainer.tsx","packages/react-pangul-app/src/components/layout/layoutRightBox/layoutRightBox.tsx","packages/react-pangul-app/src/pages/generic/genericLoginPage/genericLoginPage.tsx","packages/react-pangul-app/src/app/appAuth/appAuth.tsx","packages/react-pangul-app/src/components/common/display/safeHtml/safeHtml.tsx","packages/react-pangul-app/src/components/common/display/safeMarkdown/safeMarkdown.tsx","packages/react-pangul-app/src/components/common/editors/markdownEditor/markdownEditor.tsx","packages/react-pangul-app/src/components/answer/answerForm/answerForm.tsx","packages/react-pangul-app/src/components/common/display/infoNotice/infoNotice.tsx","packages/react-pangul-core/src/controllers/topicsController.ts","packages/react-pangul-core/src/domain/querySet.ts","packages/react-pangul-core/src/domain/topic.ts","packages/react-pangul-app/src/infrastructure/service/navigationService.ts","packages/react-pangul-app/src/components/question/questionLink/questionLink.tsx","packages/react-pangul-app/src/components/topic/topicInfo/topicInfo.tsx","packages/react-pangul-app/src/components/user/userCurrentInfo/userCurrentInfo.tsx","packages/react-pangul-app/src/components/layout/layoutFooter/layoutFooter.tsx","packages/react-pangul-app/src/components/layout/layoutStandardHeader/layoutStandardHeader.tsx","packages/react-pangul-app/src/components/layout/layoutRightBottom/layoutRightBottom.tsx","packages/react-pangul-app/src/components/layout/layoutIf/layoutIf.tsx","packages/react-pangul-app/src/components/metadata/votesAndStars/votesAndStars.tsx","packages/react-pangul-app/src/components/tag/tagList/tagList.tsx","packages/react-pangul-app/src/components/user/userSummary/userSummary.tsx","packages/react-pangul-app/src/components/question/questionView/questionView.tsx","packages/react-pangul-core/src/controllers/answersController.ts","packages/react-pangul-core/src/domain/answerMeta.ts","packages/react-pangul-core/src/controllers/usersController.ts","packages/react-pangul-core/src/infrastructure/caching/memoryCache.ts","packages/react-pangul-core/src/domain/userView.ts","packages/react-pangul-core/src/domain/answer.ts","packages/react-pangul-core/src/controllers/questionsController.ts","packages/react-pangul-core/src/domain/questionMeta.ts","packages/react-pangul-core/src/domain/question.ts","packages/react-pangul-app/src/infrastructure/componentHelpers/page.ts","packages/react-pangul-app/src/pages/answer/topicAnswerQuestion/topicAnswerQuestion.ts","packages/react-pangul-app/src/pages/answer/topicAnswerQuestion/topicAnswerQuestionPage.tsx","packages/react-pangul-app/src/components/layout/layoutUnsafeBox/layoutUnsafeBox.tsx","packages/react-pangul-app/src/components/layout/layoutWithPermissions/layoutWithPermissions.tsx","packages/react-pangul-app/src/components/layout/layoutStandardUnsafe/layoutStandardUnsafe.tsx","packages/react-pangul-app/src/pages/answer/topicEditAnswer/topicEditAnswer.ts","packages/react-pangul-app/src/pages/answer/topicEditAnswer/topicEditAnswerPage.tsx","packages/react-pangul-app/src/pages/generic/genericHelpPage/genericHelpPage.tsx","packages/react-pangul-app/src/pages/generic/genericLogoutPage/genericLogoutPage.tsx","packages/react-pangul-app/src/components/common/editors/inputEditor/inputEditor.tsx","packages/react-pangul-app/src/components/answer/answerLink/answerLink.tsx","packages/react-pangul-app/src/components/tag/tagPicker/tagPicker.tsx","packages/react-pangul-app/src/components/common/utility/sameArray.ts","packages/react-pangul-app/src/components/question/questionForm/questionForm.tsx","packages/react-pangul-app/src/pages/question/topicAskQuestion/topicAskQuestion.ts","packages/react-pangul-app/src/pages/question/topicAskQuestion/topicAskQuestionPage.tsx","packages/react-pangul-app/src/pages/question/topicEditQuestion/topicEditQuestion.ts","packages/react-pangul-app/src/pages/question/topicEditQuestion/topicEditQuestionPage.tsx","packages/react-pangul-app/src/components/answer/answerView/answerView.tsx","packages/react-pangul-app/src/components/answer/answerList/answerList.tsx","packages/react-pangul-app/src/components/common/fragments/querySetPaginator/querySetPaginator.tsx","packages/react-pangul-app/src/pages/question/topicViewQuestion/topicViewQuestion.ts","packages/react-pangul-app/src/pages/question/topicViewQuestion/topicViewQuestionPage.tsx","packages/react-pangul-app/src/components/common/fragments/searchBar/searchBar.tsx","packages/react-pangul-app/src/components/topic/topicView/topicView.tsx","packages/react-pangul-app/src/components/topic/topicList/topicList.tsx","packages/react-pangul-app/src/pages/topic/topicDiscover/topicDiscover.ts","packages/react-pangul-app/src/pages/topic/topicDiscover/topicDiscoverPage.tsx","packages/react-pangul-app/src/components/common/editors/inlineImgEditor/inlineImgEditor.tsx","packages/react-pangul-app/src/components/topic/topicForm/topicForm.tsx","packages/react-pangul-app/src/pages/topic/topicEdit/topicEdit.ts","packages/react-pangul-app/src/pages/topic/topicEdit/topicEditPage.tsx","packages/react-pangul-app/src/components/metadata/votesAndStarsReadonly/votesAndStarsReadonly.tsx","packages/react-pangul-app/src/components/question/questionSummaryView/questionSummaryView.tsx","packages/react-pangul-app/src/components/question/questionSummaryList/questionSummaryList.tsx","packages/react-pangul-core/src/domain/questionSummary.ts","packages/react-pangul-app/src/pages/topic/topicSearch/topicSearch.ts","packages/react-pangul-app/src/pages/topic/topicSearch/topicSearchPage.tsx","packages/react-pangul-app/src/pages/user/userViewProfile/userViewSelfProfile.ts","packages/react-pangul-app/src/pages/user/userViewProfile/userViewSelfProfilePage.tsx","packages/react-pangul-app/src/app/appRoutes/appRoutes.tsx","packages/react-pangul-app/src/app/pangul/pangul.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["Model","_Stateful","state","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_unsafeAssignState","blank","rebind","inherits","createClass","key","value","_update","asyncToGenerator","regenerator_default","a","mark","_callee","asyncUpdateAction","wrap","_context","prev","next","esm_get","prototype","stop","_x","apply","arguments","get","props","Stateful","parent","error","updating","updateDepth","observer","Subject","onUpdate","subscriber","subscribe","unsubscribe","_startUpdate","delta","objectSpread","t0","_completedUpdate","_arr","entries","_i","length","entry","_","UserContext","_Model","_reset","_callee2","_context2","update","abrupt","loggedIn","permissions","username","LayoutTheme","_React$Component","react","className","children","React","Provider","instance","provide","Error","LoggerProvider","ProviderFactory","factory","StandardError","message","errors","innerErrors","AjaxFetch","rootUrl","body","JSON","stringify","logger","info","url","fetch","concat","method","response","ok","statusText","json","apiHeaders","Headers","Accept","Content-Type","X-Requested-With","raw","serializeRequestBody","cache","credentials","headers","mode","redirect","errorDetail","result","success","status","t1","ConsoleLogger","window","console","_ref","_len","optionalParams","Array","_key","log","ProviderSingleton","FetchProvider","SettingsProvider","TopicLinkType","BaseController","_post","post","sent","data","_x2","AuthController","_BaseController","_login","password","_logout","_claims","_callee3","_context3","AuthService","authController","context","user","login","claims","token","_this2","logout","reset","filter","p","find","i","_callee5","_context5","_this3","PageLoader","loading","LayoutContentContainer","_React$PureComponent","ErrorNotice","innerRef","scrollAsync","ref","renderInnerErrors","inner","kv","push","setTimeout","current","ReactDOM","scrollIntoView","block","behavior","LayoutFormContainer","errorNotice_ErrorNotice","LayoutRightBox","position","expand","style","GenericLoginPage","onSubmitLogin","e","preventDefault","onUsernameChange","setState","currentTarget","onPasswordChange","pageLoader_PageLoader","layoutContentContainer_LayoutContentContainer","layoutFormContainer_LayoutFormContainer","onSubmit","type","onChange","layoutRightBox_LayoutRightBox","AppAuth","refreshed","resubscribe","content","renderLoggedIn","renderLoggedOut","service","forceUpdate","refresh","then","SafeHtml","sanitize","allowProtocolRelative","allowedAttributes","img","allowedIframeHostnames","allowedTags","allowedSchemes","allowedSchemesAppliedToAttributes","allowedSchemesByTag","selfClosing","output","safe","dangerouslySetInnerHTML","__html","SafeMarkdown","converter","Showdown","html","makeHtml","markdown","safeHtml_SafeHtml","MarkdownEditor","events","lastPropValue","safeMarkdown_SafeMarkdown","event","AnswerForm","lastUpdate","Date","onBodyChanged","onSave","answer","action","markdownEditor_MarkdownEditor","saveText","submit","InfoNotice","TopicsController","_delete2","RowVersion","rowVersion","TopicId","topicId","_get","name","id","TopicName","_x3","_x4","_search","_callee4","query","offset","limit","_context4","_x5","_x6","_x7","QuerySet","page","queryResult","deferred","instances","pageSize","fetchIds","identityList","map","fetchInstance","Promise","all","moreResults","_next","_prev","reject","_this4","_fromQuery","_callee6","querySet","_context6","undefined","Topic","controller","delete","_refresh","fetchData","_save","_callee8","_context8","_callee7","simpleState","_context7","description","icon","_fetchData","_callee9","_context9","_callee10","topic","_context10","fromQuery","searchForIds","getById","_getById","_callee11","_context11","_searchForIds","_callee12","_context12","search","NavigationService","root","baseUrl","endsWith","replace","questionId","answerId","location","href","QuestionLinkType","TopicLink","nav","linkUrl","getUrl","Link","to","target","AddQuestion","urlForTopicAddQuestion","View","urlForTopic","Edit","urlForTopicEdit","None","urlForRoot","TopicDescription","desc","topicLink_TopicLink","TopicIcon","src","TopicInfo","topicInfo_TopicIcon","topicInfo_TopicDescription","UserCurrentInfo","_getPrototypeOf2","args","urlForSelfProfile","urlForLogout","LayoutFooter","settings","footerNotice","urlForHelp","LayoutStandardHeader","topicInfo_TopicInfo","userCurrentInfo_UserCurrentInfo","layoutFooter_LayoutFooter","QuestionLink","question","topicName","urlForQuestion","urlForQuestionEdit","Answer","urlForQuestionAnswer","LayoutRightBottom","LayoutIf","show","VotesAndStars","onVoteUp","userVotes","onVote","onVoteDown","onStar","showStars","userStars","upStyles","downStyles","starStyles","join","onClick","votes","layoutIf_LayoutIf","TagList","tags","urlForTopicQuery","UserSummary","QuestionView","meta","voteUp","voteDown","voteNeutral","_ref2","stars","addStar","removeStar","votesAndStars_VotesAndStars","star","global","title","tagList_TagList","layoutRightBottom_LayoutRightBottom","userSummary_UserSummary","AnswersController","_add","_getMetadata","_updateMetadata","metadata","_x8","_x9","AnswerMeta","_voteUp","updateMetadata","getMetadata","_voteNeutral","_voteDown","answerMetaId","userQueryCache","pending","requests","requestKey","MemoryCache","isExpired","expiresIn","expires","now","resolve","UserController","userId","cachedResponse","waitPending","set","UserView","userData","fetchAnswerData","identity","add","canEdit","_fetchAnswerData","answerData","QuestionsController","_getSummary","_x10","QuestionMeta","_addStar","_removeStar","_this5","questionMetaId","Question","fetchQuestionData","_fetchQuestionData","questionData","Page","isLoaded","runAsync","loadInitialData","task","err","TopicAnswerQuestion","_Page","_answerQuestion","notice","save","_loadInitialData","fromProps","TopicAnswerQuestionPage","answerQuestionEvent","answerQuestion","unload","load","guardInvalidState","layoutStandardHeader_LayoutStandardHeader","questionLink_QuestionLink","questionView_QuestionView","infoNotice_InfoNotice","answerForm_AnswerForm","LayoutUnsafeBox","toggleOpenState","open","LayoutWithPermissions","auth","authorized","hasPermissions","requirePermissions","LayoutStandardUnsafe","layoutWithPermissions_LayoutWithPermissions","layoutUnsafeBox_LayoutUnsafeBox","TopicEditAnswer","_saveAnswer","_deleteAnswer","TopicEditAnswerPage","saveAnswerEvent","saveAnswer","onDeleteQuestion","deleteAnswer","layoutStandardUnsafe_LayoutStandardUnsafe","HelpTip","GenericHelpPage","genericHelpPage_HelpTip","GenericLogoutPage","onLogout","authService","Redirect","InputEditor","AnswerLinkType","TagPicker","onTagsChangedEvent","lastTags","tagEditValue","onTagsChanged","b","index","isSameArray","self","indexOf","inputEditor_InputEditor","split","trim","onlyUnique","QuestionForm","onSaveEvent","onTitleChangedEvent","onBodyChangedEvent","onTopicChanged","onTitleChanged","showTopic","tagPicker_TagPicker","TopicAskQuestion","_askQuestion","TopicAskQuestionPage","askQuestion","questionForm_QuestionForm","TopicEditQuestion","_updateQuestion","_deleteQuestion","postDeleteUrl","TopicEditQuestionPage","onUpdateQuestionEvent","updateQuestion","deleteQuestion","AnswerLink","urlForAnswerEdit","AnswerView","answerLink_AnswerLink","AnswerList","renderAnswerList","answers","answerView_AnswerView","QuerySetPaginator","onChangeSize","ev","val","Number","options","allowedSizes","queryState","onPrev","onNext","TopicViewQuestion","_setPageSize","refreshData","_refreshData","TopicViewQuestionPage","size","setPageSize","answerList_AnswerList","querySetPaginator_QuerySetPaginator","SearchBar","searchStream","onChangeEvent","pipe","debounceTime","debounce","defaultProps","TopicView","topicView_TopicIcon","TopicList","renderList","topics","topicView_TopicView","TopicDiscover","TopicDiscoverPage","onSearchEvent","onSearch","searchBar_SearchBar","topicList_TopicList","RenderImg","InlineImgEditor","loaded","total","inlineImgEditor_RenderImg","files","file","reader","FileReader","onloadend","onprogress","readAsDataURL","TopicForm","onDescChangedEvent","onDescChanged","onIconChangedEvent","onIconChanged","inlineImgEditor_InlineImgEditor","TopicEdit","_saveTopic","_deleteTopic","TopicEditPage","onSubmitFormEvent","saveTopic","onDeleteTopic","deleteTopic","home","topicForm_TopicForm","VotesAndStarsReadonly","QuestionSummaryView","votesAndStarsReadonly_VotesAndStarsReadonly","summary","renderAnswer","QuestionSummaryList","questions","questionSummaryView_QuestionSummaryView","QuestionSummary","getSummary","TopicSearch","TopicSearchPage","lastSearchProp","prevProps","prevState","snapshot","questionSummaryList_QuestionSummaryList","UserViewSelfProfile","starQuestions","UserViewSelfProfilePage","starred","AppRoutes","help","genericHelpPage_GenericHelpPage","genericLogoutPage_GenericLogoutPage","userViewSelfProfilePage_UserViewSelfProfilePage","discoverTopics","topicDiscoverPage_TopicDiscoverPage","searchTopicWithQuery","topicSearchPage_TopicSearchPage","match","params","searchTopic","editTopic","topicEditPage_TopicEditPage","topicAskQuestionPage_TopicAskQuestionPage","viewQuestion","topicViewQuestionPage_TopicViewQuestionPage","editQuestion","topicEditQuestionPage_TopicEditQuestionPage","editAnswer","topicEditAnswerPage_TopicEditAnswerPage","topicAnswerQuestionPage_TopicAnswerQuestionPage","BrowserRouter","Switch","Route","exact","path","render","Pangul","showLoginForm","genericLoginPage_GenericLoginPage","showContent","test","showTestContent","showMainContent","appRoutes_AppRoutes","testContent","configure","backendUrl","layoutTheme_LayoutTheme","appAuth_AppAuth","App","textContent","pangul_Pangul","isLocalhost","Boolean","hostname","register","navigator","URL","process","toString","origin","addEventListener","swUrl","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","App_App","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.fba431d7.chunk.js","sourcesContent":["import Stateful from \"./stateful\";\n\nexport abstract class Model<TState> extends Stateful {\n    public constructor(state?: TState) {\n        super(state || {});\n        if (!state) {\n            this._unsafeAssignState(this.blank());\n        }\n        this.rebind();\n    }\n\n    public get state(): TState {\n        return this.props as TState;\n    }\n\n    /** Update the state and rebind parent elements */\n    public async update(asyncUpdateAction: () => Promise<{ [key: string]: any } | undefined | null>): Promise<void> {\n        await super.update(asyncUpdateAction);\n        this.rebind();\n    }\n\n    /** Return a blank instance of TState */\n    protected abstract blank(): TState;\n\n    /** Rebind all child elements to have this as a parent */\n    protected abstract rebind(): void;\n}\n","import {Subject} from \"rxjs\";\n\nexport default class Stateful {\n    public parent: Stateful | null;\n\n    public props: { [key: string]: any };\n\n    public error: Error | null;\n\n    public updating: boolean;\n\n    /** If a deep update is taking place (eg. update in update), resolve it using this */\n    private updateDepth = 0;\n\n    /** The internal observer for this object's props */\n    private observer = new Subject<Stateful>();\n\n    constructor(state?: { [key: string]: any }) {\n        this.error = null;\n        this.updating = false;\n        this.parent = null;\n        this.props = {};\n        this._unsafeAssignState(state);\n    }\n\n    /**\n     * Subscribe to updates on this object.\n     * @param onUpdate The action to invoke on an update.\n     * @return A closure to unsubscribe.\n     */\n    public subscribe(onUpdate: () => void): () => void {\n        const subscriber = this.observer.subscribe(onUpdate);\n        return () => {\n            subscriber.unsubscribe();\n        };\n    }\n\n    /** Update the object, or least make some attempt to do so */\n    public async update(asyncUpdateAction: () => Promise<{ [key: string]: any } | undefined | null>): Promise<void> {\n        this._startUpdate();\n        try {\n            const delta = await asyncUpdateAction();\n            if (delta) {\n                this.props = {...this.props, ...delta};\n            }\n        } catch (error) {\n            this.error = error;\n        }\n        this._completedUpdate();\n    }\n\n    public _startUpdate() {\n        this.updateDepth += 1;\n        this.updating = true;\n        this.error = null;\n        if (this.updateDepth === 1) {\n            this.observer.next(this);\n        }\n        if (this.parent) {\n            this.parent._startUpdate();\n        }\n    }\n\n    public _completedUpdate() {\n        this.updateDepth -= 1;\n        if (this.updateDepth === 0) {\n            this.updating = false;\n            if (this.parent) {\n                this.parent._completedUpdate();\n            }\n            this.observer.next(this);\n        }\n    }\n\n    protected _unsafeAssignState(state?: { [key: string]: any }) {\n        if (state) {\n            this.props = state;\n            try {\n                for (const entry of Object.entries(state)) {\n                    if (entry[1] instanceof Stateful) {\n                        entry[1].parent = this;\n                    }\n                }\n            } catch (_) {\n                // props wasn't a map.\n            }\n        }\n    }\n}\n","import {Model} from \"../../../react-stateful/src/model\";\n\nexport interface IUserContext {\n    loggedIn: boolean;\n    username: string;\n    permissions: string[];\n}\n\nexport class UserContext extends Model<IUserContext> {\n    /** Reset to the default state */\n    public async reset(): Promise<void> {\n        await this.update(async () => {\n            return this.blank();\n        });\n    }\n\n    protected blank(): IUserContext {\n        return {\n            loggedIn: false,\n            permissions: [],\n            username: \"anonymous user\",\n        };\n    }\n\n    protected rebind(): void {\n        // No bindings\n    }\n}\n","import * as React from \"react\";\nimport \"./layoutTheme.css\";\n\nexport class LayoutTheme extends React.Component {\n    public render() {\n        return (\n            <div className=\"component--LayoutTheme\">\n                {this.props.children}\n            </div>\n        );\n    }\n}","export default abstract class Provider<T> {\n    public get(): T {\n        const instance = this.provide();\n        if (!instance) {\n            throw new Error(\"Provider not configured\");\n        }\n        return instance;\n    }\n\n    protected abstract provide(): T | null;\n}","import ProviderFactory from \"../infrastructure/providers/providerFactory\";\nimport ILogger from \"../interfaces/logger\";\n\nexport const LoggerProvider = new ProviderFactory<ILogger>(null);\n","import Provider from \"./provider\";\n\nexport default class ProviderFactory<T> extends Provider<T> {\n    public constructor(private factory: (() => T) | null) {\n        super();\n    }\n\n    public configure(factory: () => T) {\n        this.factory = factory;\n    }\n\n    protected provide(): T | null {\n        return this.factory == null ? null : this.factory();\n    }\n}\n","export default class StandardError extends Error {\n    public innerErrors: { [key: string]: string } = {};\n    constructor(message: string, errors: { [key: string]: string }) {\n        super(message); // (1)\n        this.innerErrors = errors;\n    }\n}\n","import \"whatwg-fetch\";\nimport IFetch from \"../../interfaces/fetch\";\nimport {LoggerProvider} from \"../../providers/loggerProvider\";\nimport IStandardResponse from \"../standardResponse\";\nimport StandardError from \"./standardError\";\n\nexport default class AjaxFetch implements IFetch {\n    private static serializeRequestBody(body: any): string {\n        try {\n            return JSON.stringify(body);\n        } catch (error) {\n            const logger = LoggerProvider.get();\n            logger.info(\"Unable to serialize object\", body);\n            logger.error(error);\n            throw new Error(\"Request failed: Unable to serialize object for POST\");\n        }\n    }\n\n    constructor(private rootUrl: string) {\n    }\n\n    public async get<T>(url: string): Promise<T> {\n        const response = await fetch(`${this.rootUrl}${url}`, {method: \"GET\"});\n        if (!response.ok) {\n            throw new Error(response.statusText);\n        }\n        return response.json();\n    }\n\n    public async post<T>(url: string, body: any): Promise<IStandardResponse<T>> {\n        const apiHeaders = new Headers({\n            \"Accept\": \"*/*\",\n            \"Content-Type\": \"application/json\",\n            \"X-Requested-With\": \"PANGUL\",\n        });\n\n        try {\n            const raw = AjaxFetch.serializeRequestBody(body);\n            const response = await fetch(`${this.rootUrl}${url}`, {\n                body: raw,\n                cache: \"no-cache\",\n                credentials: \"include\",\n                headers: apiHeaders,\n                method: \"POST\",\n                mode: \"cors\",\n                redirect: \"follow\",\n            });\n\n            if (!response.ok) {\n                try {\n                    const errorDetail = await response.json();\n                    return {\n                        error: new StandardError(errorDetail.result, errorDetail.errors),\n                        success: false,\n                    };\n                } catch (error) {\n                    return {\n                        error: new Error(`Request failed: ${response.status}: ${response.statusText}`),\n                        success: false,\n                    };\n                }\n            }\n\n            return await response.json();\n        } catch (error) {\n            return {\n                error,\n                success: false,\n            };\n        }\n    }\n}\n","import ILogger from \"../../interfaces/logger\";\n\nexport default class ConsoleLogger implements ILogger {\n    public error(error: any): void {\n        if (!error) {\n            return;\n        }\n        (window.console as any).error(error);\n    }\n\n    public info(message?: any, ...optionalParams: any[]): void {\n        // @ts-ignore\n        // noinspection TsLint\n        (window.console as any).log(message, ...optionalParams);\n    }\n}","import Provider from \"./provider\";\n\nexport default class ProviderSingleton<T> extends Provider<T> {\n    public constructor(private instance: T | null) {\n        super();\n    }\n\n    public configure(instance: T) {\n        this.instance = instance;\n    }\n\n    protected provide(): T | null {\n        return this.instance;\n    }\n}\n","import ProviderSingleton from \"../infrastructure/providers/providerSingleton\";\nimport IFetch from \"../interfaces/fetch\";\n\nexport const FetchProvider = new ProviderSingleton<IFetch>(null);\n","import * as React from \"react\";\r\nimport {UserContext} from \"../../../../react-pangul-core/src/domain/userContext\";\r\nimport AjaxFetch from \"../../../../react-pangul-core/src/infrastructure/fetch/ajaxFetch\";\r\nimport ConsoleLogger from \"../../../../react-pangul-core/src/infrastructure/logger/consoleLogger\";\r\nimport ProviderSingleton from \"../../../../react-pangul-core/src/infrastructure/providers/providerSingleton\";\r\nimport { FetchProvider } from \"../../../../react-pangul-core/src/providers/fetchProvider\";\r\nimport { LoggerProvider } from \"../../../../react-pangul-core/src/providers/loggerProvider\";\r\n\r\nexport interface ITestSettings {\r\n    test: boolean;\r\n    testUser: string;\r\n    testUserAuth: string;\r\n    testContent: null | ((user: UserContext) => React.ReactNode);\r\n}\r\n\r\nexport interface ISettings {\r\n    backendUrl: string;\r\n    baseUrl: string;\r\n    footerNotice: string;\r\n    test: ITestSettings;\r\n}\r\n\r\nexport const SettingsProvider = new ProviderSingleton<ISettings>(null);\r\n\r\nexport function configureApplication(settings: ISettings) {\r\n    FetchProvider.configure(new AjaxFetch(settings.backendUrl));\r\n    LoggerProvider.configure(() => new ConsoleLogger());\r\n    SettingsProvider.configure(settings);\r\n}\r\n","import IFetch from \"../interfaces/fetch\";\nimport ILogger from \"../interfaces/logger\";\nimport {FetchProvider} from \"../providers/fetchProvider\";\nimport {LoggerProvider} from \"../providers/loggerProvider\";\n\nexport class BaseController {\n    private get fetch(): IFetch {\n        return FetchProvider.get();\n    }\n\n    private get logger(): ILogger {\n        return LoggerProvider.get();\n    }\n\n    protected async post<TResponse>(url: string, body: any | null): Promise<TResponse> {\n        const response = await this.fetch.post<TResponse>(url, body);\n        if (response.success) {\n            return response.data as TResponse;\n        }\n        this.logger.error(response);\n        if (response.error != null) {\n            throw response.error;\n        }\n        throw new Error(\"Internal server error\");\n    }\n}\n","import * as React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport NavigationService from \"../../../infrastructure/service/navigationService\";\nimport \"./topicLink.css\";\n\nexport enum TopicLinkType {\n    AddQuestion,\n    View,\n    Edit,\n    None,\n}\n\nexport interface ITopicLink {\n    target: TopicLinkType;\n    topic: string;\n}\n\nexport class TopicLink extends React.Component<ITopicLink> {\n    private nav: NavigationService;\n\n    public constructor(props: ITopicLink) {\n        super(props);\n        this.nav = new NavigationService();\n    }\n\n    public render() {\n        if (!this.props.topic) {\n            return (<React.Fragment/>);\n        }\n        const linkUrl = this.getUrl();\n        return (\n            <div className=\"component--TopicLink\">\n                <Link to={linkUrl}>{this.props.children}</Link>\n            </div>\n        );\n    }\n\n    private getUrl(): string {\n        switch (this.props.target) {\n            case TopicLinkType.AddQuestion:\n                return this.nav.urlForTopicAddQuestion(this.props.topic);\n            case TopicLinkType.View:\n                return this.nav.urlForTopic(this.props.topic);\n            case TopicLinkType.Edit:\n                return this.nav.urlForTopicEdit(this.props.topic);\n            case TopicLinkType.None:\n                return this.nav.urlForRoot();\n            default:\n                throw new Error(\"Unsupported target\");\n        }\n    }\n}\n","import {BaseController} from \"../infrastructure/baseController\";\r\n\r\nexport interface IUserClaims {\r\n    token: string;\r\n    authenticated: boolean;\r\n    claims: string[];\r\n}\r\n\r\nexport class AuthController extends BaseController {\r\n    public async login(username: string, password: string): Promise<void> {\r\n        return await this.post<void>(\"/api/auth/login\", {username, password});\r\n    }\r\n\r\n    public async logout(): Promise<void> {\r\n        return await this.post<void>(\"/api/auth/logout\", null);\r\n    }\r\n\r\n    public async claims(): Promise<IUserClaims> {\r\n        return this.post<IUserClaims>(\"/api/auth/claims\", null);\r\n    }\r\n}\r\n","import {AuthController} from \"../controllers/authController\";\nimport {UserContext} from \"../domain/userContext\";\n\nexport default class AuthService {\n\n    private authController: AuthController;\n\n    constructor() {\n        this.authController = new AuthController();\n    }\n\n    public async login(context: UserContext, username: string, password: string) {\n        await context.update(async () => {\n            await this.authController.login(username, password);\n            const user = await this.authController.claims();\n            return {\n                loggedIn: true,\n                permissions: user.claims,\n                username: user.token,\n            };\n        });\n    }\n\n    public async logout(context: UserContext) {\n        await context.update(async () => {\n            await this.authController.logout();\n            await context.reset();\n            return null;\n        });\n    }\n\n    /** Check if a user has the required permissions */\n    public hasPermissions(user: UserContext, permissions: string[]): boolean {\n        if (permissions.length === 0) {\n            return false;\n        }\n        if (user == null) {\n            return false;\n        }\n        const missingPermissions = permissions.filter((p) => !user.state.permissions.find((i) => i === p));\n        return missingPermissions.length === 0;\n    }\n\n    /** Get the current logged in user, if any */\n    public async refresh(user: UserContext) {\n        await user.update(async () => {\n            try {\n                const claims = await this.authController.claims();\n                return {\n                    loggedIn: true,\n                    permissions: claims.claims,\n                    username: claims.token,\n                };\n            } catch (error) {\n                // Not logged in\n                await user.reset();\n                return user.state;\n            }\n        });\n    }\n}\n","import * as React from \"react\";\r\nimport \"./pageLoader.css\";\r\n\r\nexport interface IPageLoader {\r\n    loading: boolean;\r\n}\r\n\r\nexport class PageLoader extends React.Component<IPageLoader> {\r\n    public render() {\r\n        if (!this.props.loading) {\r\n            return <React.Fragment/>;\r\n        }\r\n        return (\r\n            <div className=\"component--PageLoader\">\r\n                <div>\r\n                    loading\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\nimport \"./layoutContentContainer.css\";\n\nexport class LayoutContentContainer extends React.PureComponent {\n    public render() {\n        return (\n            <div className=\"component--LayoutContentContainer\">\n                {this.props.children}\n            </div>\n        );\n    }\n}","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./errorNotice.css\";\n\nexport interface IErrorLike {\n    message: string;\n    innerErrors?: { [key: string]: string };\n}\n\nexport interface IErrorNotice {\n    error: IErrorLike | null;\n}\n\nexport class ErrorNotice extends React.Component<IErrorNotice> {\n    private readonly innerRef: React.RefObject<HTMLDivElement>;\n\n    constructor(props: IErrorNotice) {\n        super(props);\n        this.innerRef = React.createRef<HTMLDivElement>();\n    }\n\n    public render() {\n        if (!this.props.error) {\n            return (<React.Fragment/>);\n        }\n\n        this.scrollAsync();\n        return (\n            <div className=\"component--ErrorNotice\" ref={this.innerRef}>\n                <em>{this.props.error.message}</em>\n                {this.renderInnerErrors()}\n            </div>\n        );\n    }\n\n    private renderInnerErrors() {\n        if (this.props.error == null || !this.props.error.innerErrors) {\n            return \"\";\n        }\n        const inner = [];\n        for (const kv of Object.entries(this.props.error.innerErrors)) {\n            inner.push(<li key={kv[0]}>{kv[0]}: {kv[1]}</li>);\n        }\n        return (\n            <ul>\n                {inner}\n            </ul>\n        );\n    }\n\n    private scrollAsync() {\n        setTimeout(() => {\n            if (this.innerRef.current != null) {\n                const errorRef = ReactDOM.findDOMNode(this.innerRef.current);\n                (errorRef as Element).scrollIntoView({block: \"end\", behavior: \"smooth\"});\n            }\n        }, 1);\n    }\n}\n","import * as React from \"react\";\nimport {ErrorNotice} from \"../../common/errors/errorNotice/errorNotice\";\nimport \"./layoutFormContainer.css\";\n\nexport interface ILayoutFormContainer {\n    error: Error | null;\n}\n\nexport class LayoutFormContainer extends React.Component<ILayoutFormContainer> {\n    public render() {\n        return (\n            <div className=\"component--LayoutFormContainer\">\n                <ErrorNotice error={this.props.error}/>\n                {this.props.children}\n            </div>\n        );\n    }\n}","import * as React from \"react\";\nimport \"./layoutRightBox.css\";\n\nexport interface ILayoutRightBox {\n    expand: boolean;\n}\n\nexport class LayoutRightBox extends React.PureComponent<ILayoutRightBox> {\n    public render() {\n        const position = this.props.expand ? \"static\" : \"absolute\";\n        return (\n            <div className=\"component--LayoutRightBox\" style={{position}}>\n                {this.props.children}\n            </div>\n        );\n    }\n}","import * as React from \"react\";\nimport {UserContext} from \"../../../../../react-pangul-core/src/domain/userContext\";\nimport AuthService from \"../../../../../react-pangul-core/src/services/authService\";\nimport {PageLoader} from \"../../../components/common/loaders/pageLoader\";\nimport {LayoutContentContainer} from \"../../../components/layout/layoutContentContainer/layoutContentContainer\";\nimport {LayoutFormContainer} from \"../../../components/layout/layoutFormContainer/layoutFormContainer\";\nimport {LayoutRightBox} from \"../../../components/layout/layoutRightBox/layoutRightBox\";\nimport \"./genericLoginPage.css\";\n\nexport interface IGenericLoginPage {\n    user: UserContext;\n}\n\nexport interface IGenericLoginPageState {\n    username: string;\n    password: string;\n}\n\nexport class GenericLoginPage extends React.Component<IGenericLoginPage, IGenericLoginPageState> {\n    public constructor(props: IGenericLoginPage) {\n        super(props);\n        this.state = {\n            password: \"...\",\n            username: \"username\",\n        };\n    }\n\n    public render() {\n        return (\n            <div className=\"component--GenericLoginPage\">\n                <PageLoader loading={this.props.user.updating}/>\n                <LayoutContentContainer>\n                    <h3 className=\"notice\">\n                        Login required\n                    </h3>\n                </LayoutContentContainer>\n                <LayoutFormContainer error={this.props.user.error}>\n                    <form onSubmit={this.onSubmitLogin}>\n                        <fieldset>\n                            <input type=\"text\" value={this.state.username} onChange={this.onUsernameChange}/>\n                        </fieldset>\n                        <fieldset>\n                            <input type=\"password\" value={this.state.password} onChange={this.onPasswordChange}/>\n                        </fieldset>\n                        <LayoutRightBox expand={true}>\n                            <button>Login</button>\n                        </LayoutRightBox>\n                    </form>\n                </LayoutFormContainer>\n            </div>\n        );\n    }\n\n    private onSubmitLogin = (e: React.FormEvent) => {\n        e.preventDefault();\n        const service = new AuthService();\n        service.login(this.props.user, this.state.username, this.state.password);\n    }\n\n    private onUsernameChange = (e: React.FormEvent<HTMLInputElement>) => {\n        this.setState({\n            username: e.currentTarget.value,\n        });\n    }\n\n    private onPasswordChange = (e: React.FormEvent<HTMLInputElement>) => {\n        this.setState({\n            password: e.currentTarget.value,\n        });\n    }\n}\n","import * as React from \"react\";\nimport {UserContext} from \"../../../../react-pangul-core/src/domain/userContext\";\nimport AuthService from \"../../../../react-pangul-core/src/services/authService\";\n\nexport interface IAppAuth {\n    user: UserContext;\n    renderLoggedIn: () => React.ReactNode;\n    renderLoggedOut: () => React.ReactNode;\n}\n\nexport interface IAppAuthState {\n    user: UserContext | null;\n    refreshed: boolean;\n}\n\nexport class AppAuth extends React.Component<IAppAuth, IAppAuthState> {\n    public static getDerivedStateFromProps(props: IAppAuth, state: IAppAuthState) {\n        if (props.user !== state.user) {\n            return {user: props.user, refreshed: false};\n        }\n        return null;\n    }\n\n    private unsubscribe: (() => void) | null = null;\n\n    public constructor(props: IAppAuth) {\n        super(props);\n        this.state = {\n            refreshed: false,\n            user: null,\n        };\n    }\n\n    public componentWillUnmount() {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = null;\n        }\n    }\n\n    public componentDidMount() {\n        this.resubscribe();\n    }\n\n    public render() {\n\n        const content = this.props.user.state.loggedIn ? this.props.renderLoggedIn() : this.props.renderLoggedOut();\n        return (\n            <React.Fragment>\n                {content}\n            </React.Fragment>\n        );\n    }\n\n    public componentDidUpdate() {\n        if (!this.state.refreshed) {\n            this.resubscribe();\n        }\n    }\n\n    private resubscribe() {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = null;\n        }\n        if (this.state.user) {\n            (async () => {\n                if (this.state.user) {\n                    this.unsubscribe = this.state.user.subscribe(() => {\n                        this.forceUpdate();\n                    });\n\n                    // Check for existing login\n                    const service = new AuthService();\n                    await service.refresh(this.props.user);\n                }\n            })().then(() => {\n                this.setState({refreshed: true});\n            });\n        }\n    }\n}\n","import * as React from \"react\";\nimport * as sanitize from \"sanitize-html\";\nimport \"./safeHtml.css\";\n\nexport interface ISafeHtml {\n    value: string;\n}\n\n/**\n * Note that we deliberately strip H1 and H2 out of the possible content to stop people\n * spamming random stuff into topics. The topic is H1, the answer title is H2.\n * Anything else is beyond that.\n */\nexport class SafeHtml extends React.Component<ISafeHtml> {\n    private static safe(value: string) {\n        return (sanitize as any)(value, {\n            allowProtocolRelative: true,\n            allowedAttributes: {\n                a: [\"href\", \"name\", \"target\"],\n                img: [\"src\"],\n            },\n            allowedIframeHostnames: [],\n            allowedTags: [\n                \"h3\", \"h4\", \"h5\", \"h6\", \"blockquote\", \"p\", \"a\", \"ul\", \"ol\",\n                \"nl\", \"li\", \"b\", \"i\", \"strong\", \"em\", \"strike\", \"code\", \"hr\", \"br\", \"div\",\n                \"table\", \"thead\", \"caption\", \"tbody\", \"tr\", \"th\", \"td\", \"pre\", \"iframe\", \"img\"],\n\n            allowedSchemes: [\"http\", \"https\"],\n            allowedSchemesAppliedToAttributes: [\"href\", \"src\", \"cite\"],\n            allowedSchemesByTag: {},\n            selfClosing: [\"img\", \"br\", \"hr\", \"area\", \"base\", \"basefont\", \"input\", \"link\", \"meta\"],\n        }) as string;\n    }\n\n    public constructor(props: ISafeHtml) {\n        super(props);\n    }\n\n    public render() {\n        const output = SafeHtml.safe(this.props.value);\n        return (\n            <div className=\"component--SafeHtml\" dangerouslySetInnerHTML={{__html: output}}/>\n        );\n    }\n\n\n}\n","import * as React from \"react\";\r\nimport * as Showdown from \"showdown\";\r\nimport {ErrorNotice} from \"../../errors/errorNotice/errorNotice\";\r\nimport {SafeHtml} from \"../safeHtml/safeHtml\";\r\n\r\nexport interface ISafeMarkdown {\r\n    markdown: string;\r\n}\r\n\r\nexport class SafeMarkdown extends React.PureComponent<ISafeMarkdown> {\r\n    private converter: Showdown.Converter;\r\n\r\n    constructor(props: ISafeMarkdown) {\r\n        super(props);\r\n        this.converter = new Showdown.Converter();\r\n    }\r\n\r\n    public render() {\r\n        try {\r\n            const html = this.converter.makeHtml(this.props.markdown);\r\n            return (\r\n                <React.Fragment>\r\n                    <SafeHtml value={html}/>\r\n                </React.Fragment>\r\n            );\r\n        } catch (error) {\r\n            return (\r\n                <ErrorNotice error={error}/>\r\n            );\r\n        }\r\n    }\r\n}\r\n","import * as React from \"react\";\nimport { SafeMarkdown } from \"../../display/safeMarkdown/safeMarkdown\";\nimport \"./markdownEditor.css\";\n\nexport interface IMarkdownEditor {\n    value: string;\n    onChange: (body: string) => void;\n}\n\nexport interface IMarkdownEditorState {\n    value: string;\n    lastPropValue: string;\n}\n\nexport class MarkdownEditor extends React.Component<IMarkdownEditor, IMarkdownEditorState> {\n    public static getDerivedStateFromProps(props: IMarkdownEditor, state: IMarkdownEditorState) {\n        if (props.value !== state.lastPropValue) {\n            return {value: props.value, lastPropValue: props.value};\n        }\n        return null;\n    }\n\n    private events: { [key: string]: any } = {};\n\n    constructor(props: IMarkdownEditor) {\n        super(props);\n\n        this.state = {\n            lastPropValue: \"\",\n            value: \"\",\n        };\n        this.events = {\n            onChange: (e: React.FormEvent<HTMLTextAreaElement>) => this.onChange(e),\n        };\n    }\n\n    public render() {\n        return (\n            <div className=\"component--MarkdownEditor\">\n                <textarea value={this.state.value} onChange={this.events.onChange}/>\n                <div className=\"rendered\">\n                    <SafeMarkdown markdown={this.state.value}/>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Prevent react from jumping the cursor as you type\n     */\n    private onChange(event: React.FormEvent<HTMLTextAreaElement>) {\n        const value = event.currentTarget.value;\n        this.setState({value}, () => {\n            this.props.onChange(value);\n        });\n    }\n}\n","import * as React from \"react\";\r\nimport { Answer } from \"../../../../../react-pangul-core/src/domain/answer\";\r\nimport {MarkdownEditor} from \"../../common/editors/markdownEditor/markdownEditor\";\r\n\r\nexport interface IAnswerForm {\r\n    submit: () => Promise<void>;\r\n    answer: Answer;\r\n    saveText: string;\r\n}\r\n\r\nexport interface IAnswerFormState {\r\n    lastUpdate: Date;\r\n}\r\n\r\nexport class AnswerForm extends React.Component<IAnswerForm> {\r\n    private events: { [id: string]: (data: any) => void } = {};\r\n    private unsubscribe: (() => void) | null = null;\r\n\r\n    public constructor(props: IAnswerForm) {\r\n        super(props);\r\n        this.state = {\r\n            lastUpdate: new Date(),\r\n        };\r\n        this.events = {\r\n            onBodyChanged: (body: string) => this.onBodyChanged(body),\r\n            onSave: (e: React.FormEvent) => this.onSave(e),\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.unsubscribe = this.props.answer.subscribe(() => {\r\n            this.setState({\r\n                lastUpdate: new Date(),\r\n            });\r\n        });\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        if (this.unsubscribe) {\r\n            this.unsubscribe();\r\n            this.unsubscribe = null;\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"component--Answer\">\r\n                <form action=\"\" onSubmit={this.events.onSave}>\r\n                    <fieldset>\r\n                        <MarkdownEditor value={this.props.answer.state.body} onChange={this.events.onBodyChanged}/>\r\n                    </fieldset>\r\n                    <fieldset className=\"buttons\">\r\n                        <button className=\"submit\">{this.props.saveText}</button>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onSave(e: React.FormEvent) {\r\n        e.preventDefault();\r\n        this.props.submit();\r\n    }\r\n\r\n    private onBodyChanged(body: string) {\r\n        this.props.answer.update(async () => {\r\n            return {body};\r\n        });\r\n    }\r\n}\r\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./infoNotice.css\";\n\nexport interface IInfoNotice {\n    value: string | null;\n}\n\nexport class InfoNotice extends React.Component<IInfoNotice> {\n    private readonly innerRef: React.RefObject<HTMLDivElement>;\n\n    constructor(props: IInfoNotice) {\n        super(props);\n        this.innerRef = React.createRef<HTMLDivElement>();\n    }\n\n    public render() {\n        if (!this.props.value) {\n            return (<React.Fragment/>);\n        }\n\n        this.scrollAsync();\n        return (\n            <div className=\"component--InfoNotice\" ref={this.innerRef}>\n                {this.props.value}\n            </div>\n        );\n    }\n\n    private scrollAsync() {\n        setTimeout(() => {\n            if (this.innerRef.current != null) {\n                const errorRef = ReactDOM.findDOMNode(this.innerRef.current);\n                (errorRef as Element).scrollIntoView({block: \"end\", behavior: \"smooth\"});\n            }\n        }, 1);\n    }\n}\n","import { IQueryResult } from \"../domain/querySet\";\nimport { BaseController } from \"../infrastructure/baseController\";\n\nexport interface ITopic {\n    topicId: string;\n    name: string;\n    description: string;\n    icon: string | null;\n    rowVersion: string;\n}\n\nexport interface ITopicId {\n    topicId: string;\n}\n\nexport class TopicsController extends BaseController {\n    public async delete(state: ITopic): Promise<void> {\n        return await this.post<void>(\"/api/topics/delete\", {\n            RowVersion: state.rowVersion,\n            TopicId: state.topicId,\n        });\n    }\n\n    public async get(name: string, id: string | null): Promise<ITopic> {\n        if (id) {\n            return await this.post<ITopic>(\"/api/topics/get\", {\n                TopicId: id,\n            });\n        }\n        return await this.post<ITopic>(\"/api/topics/get\", {\n            TopicName: name,\n        });\n    }\n\n    public async update(state: ITopic): Promise<ITopicId> {\n        return await this.post<ITopic>(\"/api/topics/update\", state);\n    }\n\n    public async search(query: string, offset: number, limit: number): Promise<IQueryResult> {\n        return await this.post<IQueryResult>(\"/api/topics/search\", {\n            limit,\n            offset,\n            query,\n        });\n    }\n}\n","import {Model} from \"../../../react-stateful/src/model\";\r\nimport Stateful from \"../../../react-stateful/src/stateful\";\r\n\r\nexport interface IQueryResult {\r\n    identityList: string[];\r\n    moreResults: boolean;\r\n}\r\n\r\nexport interface IQueryFunc<TModel> {\r\n    query: string;\r\n    fetchIds: (query: string, offset: number, limit: number) => Promise<IQueryResult>;\r\n    fetchInstance: (identity: string) => Promise<TModel>;\r\n    pageSize: number;\r\n}\r\n\r\nexport interface IQuery<TModel> extends IQueryLike {\r\n    query: string;\r\n    fetchIds: (query: string, offset: number, limit: number) => Promise<IQueryResult>;\r\n    fetchInstance: (identity: string) => Promise<TModel>;\r\n    instances: TModel[];\r\n}\r\n\r\nexport interface IQueryLike {\r\n    page: number;\r\n    pageSize: number;\r\n    moreResults: boolean;\r\n}\r\n\r\nexport class QuerySet<TModel extends Stateful> extends Model<IQuery<TModel>> {\r\n\r\n    /** Create a queryset from a model, and maybe load a specific page */\r\n    public static async fromQuery<TModel extends Stateful>(query: IQueryFunc<TModel>, page?: number) {\r\n        const querySet = new QuerySet<TModel>({\r\n            ...query,\r\n            instances: [],\r\n            moreResults: false,\r\n            page: -1,\r\n        });\r\n\r\n        if (page !== null && page !== undefined) {\r\n            await querySet.fetch(page);\r\n        }\r\n\r\n        return querySet;\r\n    }\r\n\r\n    /** Fetch a specific page */\r\n    public fetch(page: number): Promise<void> {\r\n        return this.update(async () => {\r\n            const offset = page <= 0 ? 0 : page * this.state.pageSize;\r\n            const queryResult = await this.state.fetchIds(this.state.query, offset, this.state.pageSize);\r\n            const deferred = queryResult.identityList.map((id) => this.state.fetchInstance(id));\r\n            const instances = await Promise.all(deferred);\r\n            return {\r\n                instances,\r\n                moreResults: queryResult.moreResults,\r\n                page,\r\n            };\r\n        });\r\n    }\r\n\r\n    /** Next page */\r\n    public async next() {\r\n        await this.update(async () => {\r\n            if (!this.state.moreResults) {\r\n                throw new Error(\"No more results in QuerySet\");\r\n            }\r\n            return null;\r\n        });\r\n        if (!this.error) {\r\n            await this.fetch(this.state.page + 1);\r\n        }\r\n    }\r\n\r\n    /** Previous page */\r\n    public async prev() {\r\n        await this.update(async () => {\r\n            if (this.state.page <= 0) {\r\n                throw new Error(\"Already on first page of QuerySet\");\r\n            }\r\n            return null;\r\n        });\r\n        if (!this.error) {\r\n            await this.fetch(this.state.page - 1);\r\n        }\r\n    }\r\n\r\n    protected blank(): IQuery<TModel> {\r\n        return {\r\n            fetchIds: () => Promise.reject(new Error(\"Not implemented\")),\r\n            fetchInstance: () => Promise.reject(new Error(\"Not implemented\")),\r\n            instances: [],\r\n            moreResults: false,\r\n            page: 0,\r\n            pageSize: 10,\r\n            query: \"\",\r\n        };\r\n    }\r\n\r\n    protected rebind(): void {\r\n        this.state.instances.map((i) => {\r\n            i.parent = this;\r\n        });\r\n    }\r\n}","import {Model} from \"../../../react-stateful/src/model\";\nimport {TopicsController} from \"../controllers/topicsController\";\nimport {IQueryResult, QuerySet} from \"./querySet\";\n\nexport interface ITopic {\n    topicId: string;\n    name: string;\n    icon: string | null;\n    description: string;\n    rowVersion: string;\n}\n\nexport class Topic extends Model<ITopic> {\n    /** Return an instance */\n    public static async get(name: string): Promise<Topic> {\n        const topic = new Topic();\n        topic.state.name = name;\n        await topic.refresh();\n        return topic;\n    }\n\n    /** Search for topics */\n    public static search(query: string, pageSize: number = 10, page: number = 0): Promise<QuerySet<Topic>> {\n        return QuerySet.fromQuery({\n            fetchIds: Topic.searchForIds,\n            fetchInstance: Topic.getById,\n            pageSize,\n            query,\n        }, page);\n    }\n\n    /** Return an instance by id */\n    private static async getById(topicId: string): Promise<Topic> {\n        const topic = new Topic();\n        topic.state.topicId = topicId;\n        await topic.refresh();\n        return topic;\n    }\n\n    private static async searchForIds(query: string, offset: number, limit: number): Promise<IQueryResult> {\n        const controller = new TopicsController();\n        return await controller.search(query, offset, limit);\n    }\n\n    public async delete(): Promise<void> {\n        const controller = new TopicsController();\n        await this.update(async () => {\n            await controller.delete(this.state);\n            return this.blank();\n        });\n    }\n\n    /** Refresh a answer instance */\n    public async refresh(): Promise<void> {\n        await this.update(async () => await this.fetchData(this.state.name, this.state.topicId));\n    }\n\n    /** Reset to the default state */\n    public async reset(): Promise<void> {\n        await this.update(async () => {\n            return this.blank();\n        });\n    }\n\n    /** Save the state */\n    public async save(): Promise<void> {\n        const controller = new TopicsController();\n        await this.update(async () => {\n            const simpleState = {\n                ...this.state,\n            };\n            if (!this.state.topicId) {\n                throw new Error(\"Topics can only be auto-generated, use Topic.get\");\n            }\n            await controller.update(simpleState);\n            return await this.fetchData(this.state.name, null);\n        });\n    }\n\n    protected blank(): ITopic {\n        return {\n            description: \"\",\n            icon: \"\",\n            name: \"\",\n            rowVersion: \"\",\n            topicId: \"\",\n        };\n    }\n\n    protected async fetchData(name: string, topicId: string | null): Promise<ITopic> {\n        const controller = new TopicsController();\n        const data = await controller.get(name, topicId);\n        return data;\n    }\n\n    protected rebind(): void {\n        // No child elements\n    }\n}\n","import {SettingsProvider} from \"./settingsProvider\";\n\nexport default class NavigationService {\n    private readonly root: string;\n\n    constructor() {\n        this.root = SettingsProvider.get().baseUrl;\n        if (this.root.endsWith(\"/\")) {\n            this.root = this.root.replace(/\\/*$/, \"\");\n        }\n    }\n\n    public urlForAnswerEdit(topic: string, questionId: string, answerId: string) {\n        return `${this.root}/t/${topic}/${questionId}/answer/${answerId}/edit`;\n    }\n\n    public urlForQuestion(topic: string, questionId: string): string {\n        return `${this.root}/t/${topic}/${questionId}`;\n    }\n\n    public urlForQuestionEdit(topic: string, questionId: string): string {\n        return `${this.root}/t/${topic}/${questionId}/edit`;\n    }\n\n    public urlForTopic(topic: string) {\n        return `${this.root}/t/${topic}`;\n    }\n\n    public urlForTopicEdit(topic: string) {\n        return `${this.root}/t/${topic}/edit`;\n    }\n\n    public urlForTopicAddQuestion(topic: string) {\n        return `${this.root}/t/${topic}/ask`;\n    }\n\n    public urlForQuestionAnswer(topic: string, questionId: string): string {\n        return `${this.root}/t/${topic}/${questionId}/answer`;\n    }\n\n    public urlForHelp() {\n        return `${this.root}/help`;\n    }\n\n    public urlForRoot() {\n        return `${this.root}`;\n    }\n\n    public urlForLogout() {\n        return `${this.root}/logout`;\n    }\n\n    public urlForSelfProfile() {\n        return `${this.root}/self`;\n    }\n\n    public urlForTopicQuery(topic: any, query: string) {\n        return `${this.root}/t/${topic}/search/${query}`;\n    }\n\n    public redirect(url: string) {\n        window.location.href = url;\n    }\n}\n","import * as React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Question} from \"../../../../../react-pangul-core/src/domain/question\";\nimport {QuestionSummary} from \"../../../../../react-pangul-core/src/domain/questionSummary\";\nimport NavigationService from \"../../../infrastructure/service/navigationService\";\nimport \"./questionLink.css\";\n\nexport enum QuestionLinkType {\n    Answer,\n    View,\n    Edit,\n}\n\nexport interface IQuestionLink {\n    question: Question | QuestionSummary;\n    target: QuestionLinkType;\n}\n\nexport class QuestionLink extends React.Component<IQuestionLink> {\n    private nav: NavigationService;\n\n    public constructor(props: IQuestionLink) {\n        super(props);\n        this.nav = new NavigationService();\n    }\n\n    public render() {\n        if (!this.props.question) {\n            return (<React.Fragment/>);\n        }\n        const linkUrl = this.getUrl();\n\n        return (\n            <Link to={linkUrl}>{this.props.children}</Link>\n        );\n    }\n\n    private getUrl(): string {\n        const topicName = this.props.question.state.topic;\n        const questionId = this.props.question.state.questionId;\n        switch (this.props.target) {\n            case QuestionLinkType.View:\n                return this.nav.urlForQuestion(topicName, questionId);\n            case QuestionLinkType.Edit:\n                return this.nav.urlForQuestionEdit(topicName, questionId);\n            case QuestionLinkType.Answer:\n                return this.nav.urlForQuestionAnswer(topicName, questionId);\n            default:\n                throw new Error(\"Unsupported target\");\n        }\n    }\n}\n","import * as React from \"react\";\r\nimport {ITopic} from \"../../../../../react-pangul-core/src/domain/topic\";\r\nimport {TopicLink, TopicLinkType} from \"../topicLink/topicLink\";\r\nimport \"./topicInfo.css\";\r\n\r\nconst TopicDescription = (props: ITopic) => {\r\n    if (props.topicId) {\r\n        const desc = props.description || \"no description\";\r\n        return (\r\n            <div className=\"desc\">\r\n                <TopicLink target={TopicLinkType.Edit} topic={props.name}>\r\n                    {desc}\r\n                </TopicLink>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"desc\"/>\r\n    );\r\n};\r\n\r\nconst TopicIcon = (props: ITopic) => {\r\n    if (!props.icon) {\r\n        return <React.Fragment/>;\r\n    }\r\n    return (\r\n        <div className=\"icon\">\r\n            <img src={props.icon}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport class TopicInfo extends React.Component<ITopic> {\r\n    public render() {\r\n        const name = this.props.name || \"no topic\";\r\n        const type = this.props.name ? TopicLinkType.View : TopicLinkType.None;\r\n        return (\r\n            <div className=\"component--TopicInfo\">\r\n                <TopicIcon {...this.props}/>\r\n                <div>\r\n                    <TopicLink target={type} topic={name}>\r\n                        <h1 className=\"header\">{name}</h1>\r\n                    </TopicLink>\r\n                    <TopicDescription {...this.props}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {IUserContext} from \"../../../../../react-pangul-core/src/domain/userContext\";\r\nimport NavigationService from \"../../../infrastructure/service/navigationService\";\r\nimport \"./userCurrentInfo.css\";\r\n\r\nexport interface IUserCurrentInfo {\r\n    user: IUserContext;\r\n\r\n}\r\n\r\nexport class UserCurrentInfo extends React.Component<IUserCurrentInfo> {\r\n    private readonly nav = new NavigationService();\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"component--UserCurrentInfo\">\r\n                <div>\r\n                    <Link to={this.nav.urlForSelfProfile()}>{this.props.user.username}</Link>\r\n                </div>\r\n                <div className=\"logout\">\r\n                    <Link to={this.nav.urlForLogout()}>logout</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavigationService from \"../../../infrastructure/service/navigationService\";\r\nimport { SettingsProvider } from \"../../../infrastructure/service/settingsProvider\";\r\nimport \"./layoutFooter.css\";\r\n\r\nexport class LayoutFooter extends React.PureComponent {\r\n    public render() {\r\n        const settings = SettingsProvider.get();\r\n        const nav = new NavigationService();\r\n        return (\r\n            <div className=\"component--LayoutFooter\">\r\n                <div>\r\n                    <div className=\"message\">\r\n                        {settings.footerNotice}\r\n                    </div>\r\n                    <div className=\"home\">\r\n                        <Link to={nav.urlForRoot()}>Home</Link>\r\n                    </div>\r\n                    <div className=\"help\">\r\n                        <Link to={nav.urlForHelp()}>Help</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport { ITopic, Topic } from \"../../../../../react-pangul-core/src/domain/topic\";\r\nimport { IUserContext } from \"../../../../../react-pangul-core/src/domain/userContext\";\r\nimport { PageLoader } from \"../../common/loaders/pageLoader\";\r\nimport { TopicInfo } from \"../../topic/topicInfo/topicInfo\";\r\nimport { UserCurrentInfo } from \"../../user/userCurrentInfo/userCurrentInfo\";\r\nimport { LayoutFooter } from \"../layoutFooter/layoutFooter\";\r\nimport \"./layoutStandardHeader.css\";\r\n\r\nexport interface ILayoutStandardHeader {\r\n    user: IUserContext;\r\n    topic: ITopic | null;\r\n    loading: boolean;\r\n}\r\n\r\nexport class LayoutStandardHeader extends React.Component<ILayoutStandardHeader> {\r\n    public render() {\r\n        const topic = this.props.topic || new Topic().state;\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"component--LayoutStandardHeader\">\r\n                    <PageLoader loading={this.props.loading}/>\r\n                    <TopicInfo {...topic} />\r\n                    <UserCurrentInfo user={this.props.user}/>\r\n                </div>\r\n                <LayoutFooter/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\nimport \"./layoutRightBottom.css\";\n\nexport class LayoutRightBottom extends React.PureComponent {\n    public render() {\n        return (\n            <div className=\"component--LayoutRightBottom\">\n                {this.props.children}\n            </div>\n        );\n    }\n}","import * as React from \"react\";\n\nexport interface ILayoutIf {\n    show: boolean | string;\n}\n\nexport class LayoutIf extends React.PureComponent<ILayoutIf> {\n    public render() {\n        if (!this.props.show) {\n            return <React.Fragment/>;\n        }\n        return (\n            <React.Fragment>\n                {this.props.children}\n            </React.Fragment>\n        );\n    }\n}\n","import * as React from \"react\";\nimport {LayoutIf} from \"../../layout/layoutIf/layoutIf\";\nimport \"./votesAndStars.css\";\n\nexport interface IVotesAndStars {\n    votes: number;\n    userVotes: number;\n    userStars: number;\n    showStars: boolean;\n    onVote: (votes: number) => Promise<void>;\n    onStar: ((stars: number) => Promise<void>) | null;\n}\n\nexport class VotesAndStars extends React.Component<IVotesAndStars> {\n    public render() {\n        const upStyles = this.props.userVotes > 0 ? [\"up\", \"active\"] : [\"up\"];\n        const downStyles = this.props.userVotes < 0 ? [\"down\", \"active\"] : [\"down\"];\n        const starStyles = this.props.userStars > 0 ? [\"star\", \"active\"] : [\"star\"];\n        return (\n            <div className=\"component--VotesAndStars\">\n                <li>\n                    <div className={upStyles.join(\" \")} onClick={this.onVoteUp}/>\n                </li>\n                <li>\n                    <div className=\"votes\">{this.props.votes}</div>\n                </li>\n                <li>\n                    <div className={downStyles.join(\" \")} onClick={this.onVoteDown}/>\n                </li>\n                <LayoutIf show={this.props.showStars}>\n                    <li className=\"star-container\">\n                        <div className={starStyles.join(\" \")} onClick={this.onStar}/>\n                    </li>\n                </LayoutIf>\n            </div>\n        );\n    }\n\n    private onVoteUp = async () => {\n        if (this.props.userVotes === 1) {\n            await this.props.onVote(0);\n        } else {\n            await this.props.onVote(1);\n        }\n    }\n\n    private onVoteDown = async () => {\n        if (this.props.userVotes === -1) {\n            await this.props.onVote(0);\n        } else {\n            await this.props.onVote(-1);\n        }\n    }\n\n    private onStar = async () => {\n        if (!this.props.showStars || !this.props.onStar) {\n            return;\n        }\n        if (this.props.userStars > 0) {\n            await this.props.onStar(0);\n        } else {\n            await this.props.onStar(1);\n        }\n    }\n}\n","import * as React from \"react\";\nimport \"./tagList.css\";\nimport NavigationService from \"../../../infrastructure/service/navigationService\";\nimport {Link} from \"react-router-dom\";\n\nexport interface ITagList {\n    tags: string[];\n    topic: string | null;\n}\n\nexport class TagList extends React.Component<ITagList> {\n    private nav: NavigationService;\n\n    constructor(props: ITagList) {\n        super(props);\n        this.nav = new NavigationService();\n    }\n\n    public render() {\n        // TODO: Make tag pages and link to them\n        const tags = this.props.tags.map((i) => {\n            // In some cases, eg. tag picker, these shouldn't be clickable.\n            if (this.props.topic == null) {\n                return (\n                    <div key={i} className=\"tag\">\n                        {i}\n                    </div>\n                );\n            }\n\n            // But in most cases, they should link to the associated topic query\n            const linkUrl = this.nav.urlForTopicQuery(this.props.topic, `tag:${i}`);\n            return (\n                <div key={i} className=\"tag\">\n                    <Link to={linkUrl}>\n                        {i}\n                    </Link>\n                </div>\n            );\n        });\n        if (tags.length === 0) {\n            return <React.Fragment/>;\n        }\n        return (\n            <div className=\"component--TagList\">\n                {this.props.tags.length > 0 ? tags : \"No tags\"}\n            </div>\n        );\n    }\n}","import * as React from \"react\";\nimport {UserView} from \"../../../../../react-pangul-core/src/domain/userView\";\nimport \"./userSummary.css\";\n\nexport interface IUserSummary {\n    user: UserView;\n}\n\nexport class UserSummary extends React.PureComponent<IUserSummary> {\n    public render() {\n        return (\n            <div className=\"component--UserSummary\">\n                by: {this.props.user.state.username}\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\r\nimport {Question} from \"../../../../../react-pangul-core/src/domain/question\";\r\nimport {SafeMarkdown} from \"../../common/display/safeMarkdown/safeMarkdown\";\r\nimport {LayoutRightBottom} from \"../../layout/layoutRightBottom/layoutRightBottom\";\r\nimport {VotesAndStars} from \"../../metadata/votesAndStars/votesAndStars\";\r\nimport {TagList} from \"../../tag/tagList/tagList\";\r\nimport {UserSummary} from \"../../user/userSummary/userSummary\";\r\nimport \"./questionView.css\";\r\n\r\nexport interface IQuestionView {\r\n    question: Question;\r\n}\r\n\r\nexport class QuestionView extends React.Component<IQuestionView> {\r\n    public render() {\r\n        const meta = this.props.question.state.meta;\r\n        return (\r\n            <div className=\"component--QuestionView\">\r\n                <div className=\"metadata\">\r\n                    <VotesAndStars showStars={true}\r\n                                   userStars={meta.state.star ? 1 : 0}\r\n                                   userVotes={meta.state.votes}\r\n                                   votes={meta.state.global.votes}\r\n                                   onVote={this.onVote}\r\n                                   onStar={this.onStar}/>\r\n                </div>\r\n                <div className=\"output\">\r\n                    <h2>{this.props.question.state.title}</h2>\r\n                    <TagList tags={this.props.question.state.tags} topic={this.props.question.state.topic}/>\r\n                    <SafeMarkdown markdown={this.props.question.state.body}/>\r\n                    <LayoutRightBottom>\r\n                        <UserSummary user={this.props.question.state.user}/>\r\n                    </LayoutRightBottom>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onVote = async (votes: number) => {\r\n        if (votes > 0) {\r\n            await this.props.question.state.meta.voteUp();\r\n        } else if (votes < 0) {\r\n            await this.props.question.state.meta.voteDown();\r\n        } else {\r\n            await this.props.question.state.meta.voteNeutral();\r\n        }\r\n    }\r\n\r\n    private onStar = async (stars: number) => {\r\n        if (stars) {\r\n            await this.props.question.state.meta.addStar();\r\n        } else {\r\n            await this.props.question.state.meta.removeStar();\r\n        }\r\n    }\r\n}\r\n","import {IAnswerMeta} from \"../domain/answerMeta\";\nimport {IQueryResult} from \"../domain/querySet\";\nimport {BaseController} from \"../infrastructure/baseController\";\n\ninterface IAnswerId {\n    answerId: string;\n}\n\ninterface IAnswerNew {\n    questionId: string;\n    body: string;\n}\n\nexport interface IAnswerData {\n    userId: string;\n    questionId: string;\n    answerId: string;\n    body: string;\n    canEdit: boolean;\n    rowVersion: string;\n}\n\nexport class AnswersController extends BaseController {\n    public async add(answer: IAnswerNew): Promise<IAnswerId> {\n        return await this.post<IAnswerId>(\"/api/Answers/add\", answer);\n    }\n\n    public async delete(answerId: string) {\n        return await this.post<IAnswerData>(\"/api/Answers/delete\", {id: answerId});\n    }\n\n    public async get(answerId: string): Promise<IAnswerData> {\n        return await this.post<IAnswerData>(\"/api/Answers/get\", {id: answerId});\n    }\n\n    public async getMetadata(answerId: string) {\n        return await this.post<IAnswerMeta>(\"/api/Answers/metadata\", {id: answerId});\n    }\n\n    public async updateMetadata(metadata: IAnswerMeta) {\n        return await this.post<void>(\"/api/Answers/updateMetadata\", metadata);\n    }\n\n    public async update(Answer: IAnswerData): Promise<IAnswerId> {\n        return await this.post<IAnswerId>(\"/api/Answers/update\", Answer);\n    }\n\n    public async search(questionId: string, offset: number, limit: number): Promise<IQueryResult> {\n        return await this.post<IQueryResult>(\"/api/Answers/search\", {\n            limit,\n            offset,\n            questionId,\n        });\n    }\n\n}\n","import {Model} from \"../../../react-stateful/src/model\";\nimport {AnswersController} from \"../controllers/answersController\";\n\nexport interface IAnswerGlobalMeta {\n    votes: number;\n}\n\nexport interface IAnswerMeta {\n    answerMetaId: string;\n    answerId: string;\n    rowVersion: string;\n    votes: number;\n    global: IAnswerGlobalMeta;\n}\n\nexport class AnswerMeta extends Model<IAnswerMeta> {\n\n    public async voteUp() {\n        await this.update(async () => {\n            const controller = new AnswersController();\n            await controller.updateMetadata({\n                ...this.state,\n                votes: 1,\n            });\n            return await controller.getMetadata(this.state.answerId);\n        });\n    }\n\n    public async voteNeutral() {\n        await this.update(async () => {\n            const controller = new AnswersController();\n            await controller.updateMetadata({\n                ...this.state,\n                votes: 0,\n            });\n            return await controller.getMetadata(this.state.answerId);\n        });\n    }\n\n    public async voteDown() {\n        await this.update(async () => {\n            const controller = new AnswersController();\n            await controller.updateMetadata({\n                ...this.state,\n                votes: -1,\n            });\n            return await controller.getMetadata(this.state.answerId);\n        });\n    }\n\n    protected blank(): IAnswerMeta {\n        return {\n            answerId: \"\",\n            answerMetaId: \"\",\n            global: {\n                votes: 0,\n            },\n            rowVersion: \"\",\n            votes: 0,\n        };\n    }\n\n    protected rebind(): void {\n        // No child objects\n    }\n}\n","import {BaseController} from \"../infrastructure/baseController\";\nimport MemoryCache from \"../infrastructure/caching/memoryCache\";\n\nconst userQueryCache = new MemoryCache();\n\nexport interface IUserData {\n    token: string;\n    authenticated: boolean;\n    claims: string[];\n}\n\nexport class UserController extends BaseController {\n    public async get(userId: string): Promise<IUserData> {\n        const requestKey = `/api/users/get::${userId}`;\n\n        // Wait for any pending ops\n        await userQueryCache.waitPending();\n\n        // Check for resolved items\n        const cachedResponse = userQueryCache.get<IUserData>(requestKey);\n        if (cachedResponse) {\n            return cachedResponse;\n        }\n\n        // Nope, do the full thing and cache the result\n        return await userQueryCache.update(async () => {\n            const result = await this.post<IUserData>(\"/api/users/get\", {id: userId});\n            userQueryCache.set(requestKey, result, 2000);\n            return result;\n        });\n    }\n}\n","interface ICacheEntry {\n    value: any;\n    expires: number;\n}\n\nexport default class MemoryCache {\n    private static isExpired(entry: ICacheEntry) {\n        return entry.expires < Date.now();\n    }\n\n    private pending: Promise<void> | null = null;\n\n    private readonly requests: { [key: string]: ICacheEntry } = {};\n\n    public get<T>(requestKey: string): T | null {\n        const entry = this.requests[requestKey];\n        if (!entry) {\n            return null;\n        }\n\n        if (MemoryCache.isExpired(entry)) {\n            delete this.requests[requestKey];\n            return null;\n        }\n\n        return entry.value as T;\n    }\n\n    public set(requestKey: string, result: any, expiresIn: number) {\n        this.requests[requestKey] = {\n            expires: Date.now() + expiresIn,\n            value: result,\n        };\n    }\n\n    public async waitPending(): Promise<void> {\n        if (this.pending) {\n            await this.pending;\n        }\n    }\n\n    public async update<T>(action: () => Promise<T>): Promise<T> {\n        let result: T | null = null;\n\n        this.pending = new Promise(async (resolve, reject) => {\n            try {\n                result = await action();\n                resolve();\n            } catch (error) {\n                reject(error);\n            }\n        });\n        await this.pending;\n\n        if (result == null) {\n            throw new Error(\"No data returned from cache update query\");\n        }\n\n        return result;\n    }\n}\n","import {Model} from \"../../../react-stateful/src/model\";\nimport {UserController} from \"../controllers/usersController\";\n\nexport interface IUserView {\n    userId: string;\n    username: string;\n}\n\nexport class UserView extends Model<IUserView> {\n    /** Fetch a user from the user id */\n    public static async get(userId: string): Promise<UserView> {\n        const user = new UserView();\n        user.state.userId = userId;\n        await user.refresh();\n        return user;\n    }\n\n    /** Reset to the default state */\n    public async reset(): Promise<void> {\n        await this.update(async () => {\n            return this.blank();\n        });\n    }\n\n    /** Fetch from the database */\n    public async refresh(): Promise<void> {\n        await this.update(async () => {\n            const controller = new UserController();\n            const userData = await controller.get(this.state.userId);\n            return userData;\n        });\n    }\n\n    protected blank(): IUserView {\n        return {\n            userId: \"\",\n            username: \"\",\n        };\n    }\n\n    protected rebind(): void {\n        // No bindings\n    }\n}\n","import {Model} from \"../../../react-stateful/src/model\";\nimport {AnswersController} from \"../controllers/answersController\";\nimport {AnswerMeta} from \"./answerMeta\";\nimport {IQueryResult, QuerySet} from \"./querySet\";\nimport {UserView} from \"./userView\";\n\nexport interface IAnswer {\n    answerId: string;\n    canEdit: boolean;\n    questionId: string;\n    body: string;\n    meta: AnswerMeta;\n    rowVersion: string;\n    userId: string;\n    user: UserView;\n}\n\nexport class Answer extends Model<IAnswer> {\n    /** Return a answer instance */\n    public static async get(answerId: string): Promise<Answer> {\n        const answer = new Answer();\n        answer.state.answerId = answerId;\n        await answer.refresh();\n        return answer;\n    }\n\n    /** Search for answers */\n    public static search(questionId: string, pageSize: number = 10, page: number = 0): Promise<QuerySet<Answer>> {\n        return QuerySet.fromQuery({\n            fetchIds: Answer.searchForIds,\n            fetchInstance: Answer.get,\n            pageSize,\n            query: questionId,\n        }, page);\n    }\n\n    private static async searchForIds(questionId: string, offset: number, limit: number): Promise<IQueryResult> {\n        const controller = new AnswersController();\n        return await controller.search(questionId, offset, limit);\n    }\n\n    /** Refresh a answer instance */\n    public async refresh(): Promise<void> {\n        await this.update(async () => await this.fetchAnswerData(this.state.answerId));\n    }\n\n    /** Reset to the default state */\n    public async reset(): Promise<void> {\n        await this.update(async () => {\n            return this.blank();\n        });\n    }\n\n    /** Save a answer */\n    public async save(): Promise<void> {\n        const controller = new AnswersController();\n        await this.update(async () => {\n            const simpleState = {\n                ...this.state,\n            };\n            delete simpleState.meta;\n            delete simpleState.user;\n            if (!this.state.answerId) {\n                const identity = await controller.add(simpleState);\n                return await this.fetchAnswerData(identity.answerId);\n            }\n            await controller.update(simpleState);\n            return await this.fetchAnswerData(this.state.answerId);\n        });\n    }\n\n    /** Delete this answer, if you're allowed to */\n    public async delete(): Promise<void> {\n        await this.update(async () => {\n            const controller = new AnswersController();\n            await controller.delete(this.state.answerId);\n            return this.blank();\n        });\n    }\n\n    protected blank(): IAnswer {\n        return {\n            answerId: \"\",\n            body: \"...\",\n            canEdit: false,\n            meta: new AnswerMeta(),\n            questionId: \"\",\n            rowVersion: \"\",\n            user: new UserView(),\n            userId: \"\",\n        };\n    }\n\n    protected async fetchAnswerData(answerId: string): Promise<IAnswer> {\n        const controller = new AnswersController();\n        const answerData = await controller.get(answerId);\n        const meta = new AnswerMeta(await controller.getMetadata(answerId));\n        const user = await UserView.get(answerData.userId);\n        return {\n            ...answerData,\n            meta,\n            user,\n        };\n    }\n\n    protected rebind(): void {\n        this.state.meta.parent = this;\n    }\n\n}\n","import {IQueryResult} from \"../domain/querySet\";\nimport {IQuestionMeta} from \"../domain/questionMeta\";\nimport {BaseController} from \"../infrastructure/baseController\";\n\ninterface IQuestionId {\n    questionId: string;\n}\n\nexport interface IQuestionData {\n    canEdit: boolean;\n    questionId: string;\n    topic: string;\n    title: string;\n    body: string;\n    tags: string[];\n    userId: string;\n    rowVersion: string;\n}\n\nexport interface IQuestionSummaryData {\n    answer: string | null;\n    canEdit: boolean;\n    questionId: string;\n    topic: string;\n    title: string;\n    userId: string;\n    summary: string;\n    tags: string[];\n}\n\nexport class QuestionsController extends BaseController {\n    public async add(question: IQuestionData): Promise<IQuestionId> {\n        return await this.post<IQuestionId>(\"/api/questions/add\", question);\n    }\n\n    public async delete(questionId: string): Promise<void> {\n        return await this.post<void>(\"/api/questions/delete\", {id: questionId});\n    }\n\n    public async get(questionId: string): Promise<IQuestionData> {\n        return await this.post<IQuestionData>(\"/api/questions/get\", {id: questionId});\n    }\n\n    public async getMetadata(questionId: string) {\n        return await this.post<IQuestionMeta>(\"/api/questions/metadata\", {id: questionId});\n    }\n\n    public async getSummary(questionId: string): Promise<IQuestionSummaryData> {\n        return await this.post<IQuestionSummaryData>(\"/api/questions/getSummary\", {id: questionId});\n    }\n\n    public async updateMetadata(metadata: IQuestionMeta) {\n        return await this.post<void>(\"/api/questions/updateMetadata\", metadata);\n    }\n\n    public async update(question: IQuestionData): Promise<IQuestionId> {\n        return await this.post<IQuestionId>(\"/api/questions/update\", question);\n    }\n\n    public async search(query: string, offset: number, limit: number): Promise<IQueryResult> {\n        return await this.post<IQueryResult>(\"/api/questions/search\", {\n            limit,\n            offset,\n            query,\n        });\n    }\n}\n","import {Model} from \"../../../react-stateful/src/model\";\nimport {QuestionsController} from \"../controllers/questionsController\";\n\nexport interface IQuestionGlobalMeta {\n    votes: number;\n}\n\nexport interface IQuestionMeta {\n    questionMetaId: string;\n    questionId: string;\n    rowVersion: string;\n    star: boolean;\n    votes: number;\n    global: IQuestionGlobalMeta;\n}\n\nexport class QuestionMeta extends Model<IQuestionMeta> {\n\n    public async voteUp() {\n        await this.update(async () => {\n            const controller = new QuestionsController();\n            await controller.updateMetadata({\n                ...this.state,\n                votes: 1,\n            });\n            return await controller.getMetadata(this.state.questionId);\n        });\n    }\n\n    public async voteNeutral() {\n        await this.update(async () => {\n            const controller = new QuestionsController();\n            await controller.updateMetadata({\n                ...this.state,\n                votes: 0,\n            });\n            return await controller.getMetadata(this.state.questionId);\n        });\n    }\n\n    public async voteDown() {\n        await this.update(async () => {\n            const controller = new QuestionsController();\n            await controller.updateMetadata({\n                ...this.state,\n                votes: -1,\n            });\n            return await controller.getMetadata(this.state.questionId);\n        });\n    }\n\n    public async addStar() {\n        await this.update(async () => {\n            const controller = new QuestionsController();\n            await controller.updateMetadata({\n                ...this.state,\n                star: true,\n            });\n            return await controller.getMetadata(this.state.questionId);\n        });\n    }\n\n    public async removeStar() {\n        await this.update(async () => {\n            const controller = new QuestionsController();\n            await controller.updateMetadata({\n                ...this.state,\n                star: false,\n            });\n            return await controller.getMetadata(this.state.questionId);\n        });\n    }\n\n    protected blank(): IQuestionMeta {\n        return {\n            global: {\n                votes: 0,\n            },\n            questionId: \"\",\n            questionMetaId: \"\",\n            rowVersion: \"\",\n            star: false,\n            votes: 0,\n        };\n    }\n\n    protected rebind(): void {\n        // No child objects\n    }\n}\n","import {Model} from \"../../../react-stateful/src/model\";\nimport {QuestionsController} from \"../controllers/questionsController\";\nimport {IQueryResult, QuerySet} from \"./querySet\";\nimport {QuestionMeta} from \"./questionMeta\";\nimport {UserView} from \"./userView\";\n\nexport interface IQuestion {\n    questionId: string;\n    topic: string;\n    title: string;\n    body: string;\n    tags: string[];\n    userId: string;\n    meta: QuestionMeta;\n    user: UserView;\n    canEdit: boolean;\n    rowVersion: string;\n}\n\nexport class Question extends Model<IQuestion> {\n    /** Return a answer instance */\n    public static async get(questionId: string): Promise<Question> {\n        const question = new Question();\n        question.state.questionId = questionId;\n        await question.refresh();\n        return question;\n    }\n\n    /** Search for topics */\n    public static search(query: string, pageSize: number = 10, page: number = 0): Promise<QuerySet<Question>> {\n        return QuerySet.fromQuery({\n            fetchIds: Question.searchForIds,\n            fetchInstance: Question.get,\n            pageSize,\n            query,\n        }, page);\n    }\n\n    private static async searchForIds(query: string, offset: number, limit: number): Promise<IQueryResult> {\n        const controller = new QuestionsController();\n        return await controller.search(query, offset, limit);\n    }\n\n    /** Delete this answer and all it's answers and data */\n    public async delete(): Promise<void> {\n        const controller = new QuestionsController();\n        await this.update(async () => {\n            await controller.delete(this.state.questionId);\n            return {\n                questionId: \"\",\n                rowVersion: \"\",\n            };\n        });\n    }\n\n    /** Refresh a answer instance */\n    public async refresh(): Promise<void> {\n        await this.update(async () => await this.fetchQuestionData(this.state.questionId));\n    }\n\n    /** Reset to the default state */\n    public async reset(): Promise<void> {\n        await this.update(async () => {\n            return this.blank();\n        });\n    }\n\n    /** Save a answer */\n    public async save(): Promise<void> {\n        const controller = new QuestionsController();\n        await this.update(async () => {\n            const simpleState = {\n                ...this.state,\n            };\n            delete simpleState.meta;\n            delete simpleState.user;\n            if (!this.state.questionId) {\n                const identity = await controller.add(simpleState);\n                return await this.fetchQuestionData(identity.questionId);\n            }\n            await controller.update(simpleState);\n            return await this.fetchQuestionData(this.state.questionId);\n        });\n    }\n\n    protected blank(): IQuestion {\n        return {\n            body: \"...\",\n            canEdit: false,\n            meta: new QuestionMeta(),\n            questionId: \"\",\n            rowVersion: \"\",\n            tags: [],\n            title: \"new question\",\n            topic: \"default\",\n            user: new UserView(),\n            userId: \"\",\n        };\n    }\n\n    protected async fetchQuestionData(questionId: string): Promise<IQuestion> {\n        const controller = new QuestionsController();\n        const questionData = await controller.get(questionId);\n        const meta = new QuestionMeta(await controller.getMetadata(questionId));\n        const user = await UserView.get(questionData.userId);\n        return {\n            ...questionData,\n            meta,\n            user,\n        };\n    }\n\n    protected rebind(): void {\n        this.state.meta.parent = this;\n    }\n}\n","import { LoggerProvider } from \"../../../../react-pangul-core/src/providers/loggerProvider\";\r\nimport { Model } from \"../../../../react-stateful/src/model\";\r\n\r\nexport abstract class Page<TInitialStateProps, TPageState> extends Model<TPageState> {\r\n    protected isLoaded: boolean = false;\r\n    protected unsubscribe: () => void;\r\n\r\n    public constructor(forceUpdate: () => void) {\r\n        super();\r\n        this.unsubscribe = this.subscribe(() => {\r\n            forceUpdate();\r\n        });\r\n    }\r\n\r\n    public load(props: TInitialStateProps) {\r\n        this.isLoaded = true;\r\n        this.runAsync(async () => await this.loadInitialData(props));\r\n    }\r\n\r\n    public unload(): void {\r\n        if (this.isLoaded) {\r\n            this.isLoaded = false;\r\n            this.unsubscribe();\r\n        }\r\n    }\r\n\r\n    protected abstract loadInitialData(props: TInitialStateProps): Promise<void>;\r\n\r\n    protected runAsync(task: () => Promise<void>) {\r\n        setTimeout(() => {\r\n            task().then(() => {\r\n                // Success, do nothing\r\n            }, (err) => {\r\n                LoggerProvider.get().error(err);\r\n            });\r\n        }, 1);\r\n    }\r\n}\r\n","import {Answer} from \"../../../../../react-pangul-core/src/domain/answer\";\nimport {Question} from \"../../../../../react-pangul-core/src/domain/question\";\nimport {Topic} from \"../../../../../react-pangul-core/src/domain/topic\";\nimport {UserContext} from \"../../../../../react-pangul-core/src/domain/userContext\";\nimport {Page} from \"../../../infrastructure/componentHelpers/page\";\n\nexport interface ITopicAnswerQuestionProps {\n    topic: string;\n    question: string;\n    user: UserContext;\n}\n\ninterface ITopicAnswerQuestion {\n    topic: Topic;\n    question: Question;\n    answer: Answer;\n    notice: string | null;\n}\n\nexport class TopicAnswerQuestion extends Page<ITopicAnswerQuestionProps, ITopicAnswerQuestion> {\n    public async answerQuestion() {\n        await this.update(async () => {\n            return Promise.resolve({notice: null});\n        });\n        await this.state.answer.update(async () => {\n            return {\n                questionId: this.state.question.state.questionId,\n            };\n        });\n        await this.state.answer.save();\n        if (this.state.answer.error === null) {\n            await this.update(async () => {\n                return Promise.resolve({notice: \"Saved answer\"});\n            });\n        }\n    }\n\n    protected async loadInitialData(fromProps: ITopicAnswerQuestionProps): Promise<void> {\n        await this.update(async () => {\n            const topic = await Topic.get(fromProps.topic);\n            if (topic.error) {\n                throw topic.error;\n            }\n\n            const question = await Question.get(fromProps.question);\n            if (question.error) {\n                throw question.error;\n            }\n\n            return {question, topic, answer: new Answer()};\n        });\n    }\n\n    protected blank(): ITopicAnswerQuestion {\n        return {\n            answer: new Answer(),\n            notice: null,\n            question: new Question(),\n            topic: new Topic(),\n        };\n    }\n\n    protected rebind(): void {\n        this.state.topic.parent = this;\n        this.state.question.parent = this;\n        this.state.answer.parent = this;\n    }\n}\n","import * as React from \"react\";\nimport {AnswerForm} from \"../../../components/answer/answerForm/answerForm\";\nimport {InfoNotice} from \"../../../components/common/display/infoNotice/infoNotice\";\nimport {LayoutContentContainer} from \"../../../components/layout/layoutContentContainer/layoutContentContainer\";\nimport {LayoutFormContainer} from \"../../../components/layout/layoutFormContainer/layoutFormContainer\";\nimport {LayoutRightBox} from \"../../../components/layout/layoutRightBox/layoutRightBox\";\nimport {LayoutStandardHeader} from \"../../../components/layout/layoutStandardHeader/layoutStandardHeader\";\nimport {QuestionLink, QuestionLinkType} from \"../../../components/question/questionLink/questionLink\";\nimport {QuestionView} from \"../../../components/question/questionView/questionView\";\nimport {ITopicAnswerQuestionProps, TopicAnswerQuestion} from \"./topicAnswerQuestion\";\n\nexport class TopicAnswerQuestionPage extends React.Component<ITopicAnswerQuestionProps> {\n    private data: TopicAnswerQuestion;\n\n    constructor(props: ITopicAnswerQuestionProps) {\n        super(props);\n        this.data = new TopicAnswerQuestion(() => this.forceUpdate());\n\n    }\n\n    public componentDidMount() {\n        this.data.unload();\n        this.data = new TopicAnswerQuestion(() => this.forceUpdate());\n        this.data.load(this.props);\n    }\n\n    public componentWillUnmount() {\n        this.data.unload();\n    }\n\n    public render() {\n        if (!this.guardInvalidState()) {\n            return \"\";\n        }\n\n        const question = this.data.state.question;\n        const answer = this.data.state.answer;\n        const topic = this.data.state.topic;\n\n        return (\n            <div className={\"component--TopicHomePage\"}>\n                <LayoutStandardHeader user={this.props.user.state}\n                                      topic={topic.state}\n                                      loading={this.data.updating}/>\n                <LayoutContentContainer>\n                    <LayoutRightBox expand={false}>\n                        <QuestionLink question={question} target={QuestionLinkType.View}>\n                            View full question\n                        </QuestionLink>\n                    </LayoutRightBox>\n                    <QuestionView question={question}/>\n                </LayoutContentContainer>\n\n                <LayoutFormContainer error={this.data.state.question.error}>\n                    <InfoNotice value={this.data.state.notice}/>\n                    <AnswerForm submit={this.answerQuestionEvent}\n                                answer={answer}\n                                saveText=\"Save\"/>\n                </LayoutFormContainer>\n            </div>\n        );\n    }\n\n    public guardInvalidState(): boolean {\n        return this.data !== null;\n    }\n\n    private answerQuestionEvent = () => this.data.answerQuestion();\n}\n","import * as React from \"react\";\nimport \"./layoutUnsafeBox.css\";\n\nexport interface ILayoutUnsafeBox {\n    title: string;\n}\n\nexport interface ILayoutUnsafeBoxState {\n    open: boolean;\n}\n\nexport class LayoutUnsafeBox extends React.Component<ILayoutUnsafeBox, ILayoutUnsafeBoxState> {\n    public constructor(props: ILayoutUnsafeBox) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n    }\n\n    public render() {\n        if (this.state.open) {\n            return (\n                <div className=\"component--LayoutUnsafeBox\">\n                    <div className=\"header\" onClick={this.toggleOpenState}>\n                        {this.props.title}\n                    </div>\n                    {this.props.children}\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"component--LayoutUnsafeBox\">\n                <div className=\"header\" onClick={this.toggleOpenState}>\n                    {this.props.title}\n                </div>\n            </div>\n        );\n    }\n\n    private toggleOpenState = () => {\n        this.setState({open: !this.state.open});\n    }\n}\n","import * as React from \"react\";\nimport {UserContext} from \"../../../../../react-pangul-core/src/domain/userContext\";\nimport AuthService from \"../../../../../react-pangul-core/src/services/authService\";\n\nexport interface ILayoutWithPermissions {\n    user: UserContext;\n    requirePermissions: string[];\n}\n\nexport class LayoutWithPermissions extends React.Component<ILayoutWithPermissions> {\n    private auth = new AuthService();\n\n    public render() {\n        return (\n            <React.Fragment>\n                {this.authorized() ? this.props.children : <React.Fragment/>}\n            </React.Fragment>\n        );\n    }\n\n    private authorized(): boolean {\n        return this.auth.hasPermissions(this.props.user, this.props.requirePermissions);\n    }\n}\n","import * as React from \"react\";\nimport {UserContext} from \"../../../../../react-pangul-core/src/domain/userContext\";\nimport {LayoutContentContainer} from \"../layoutContentContainer/layoutContentContainer\";\nimport {LayoutUnsafeBox} from \"../layoutUnsafeBox/layoutUnsafeBox\";\nimport {LayoutWithPermissions} from \"../layoutWithPermissions/layoutWithPermissions\";\n\nexport interface ILayoutStandardUnsafe {\n    user: UserContext;\n    permissions: string[];\n}\n\nexport class LayoutStandardUnsafe extends React.Component<ILayoutStandardUnsafe> {\n    public render() {\n        return (\n            <LayoutWithPermissions user={this.props.user} requirePermissions={this.props.permissions}>\n                <LayoutContentContainer>\n                    <LayoutUnsafeBox title=\"Unsafe commands\">\n                        <form>\n                            <fieldset>\n                                {this.props.children}\n                            </fieldset>\n                        </form>\n                    </LayoutUnsafeBox>\n                </LayoutContentContainer>\n            </LayoutWithPermissions>\n        );\n    }\n}\n","import {Answer} from \"../../../../../react-pangul-core/src/domain/answer\";\nimport {Question} from \"../../../../../react-pangul-core/src/domain/question\";\nimport {Topic} from \"../../../../../react-pangul-core/src/domain/topic\";\nimport {UserContext} from \"../../../../../react-pangul-core/src/domain/userContext\";\nimport {Page} from \"../../../infrastructure/componentHelpers/page\";\nimport NavigationService from \"../../../infrastructure/service/navigationService\";\n\nexport interface ITopicEditAnswerProps {\n    topic: string;\n    question: string;\n    answer: string;\n    user: UserContext;\n}\n\ninterface ITopicEditAnswer {\n    topic: Topic;\n    question: Question;\n    answer: Answer;\n    notice: string | null;\n}\n\nexport class TopicEditAnswer extends Page<ITopicEditAnswerProps, ITopicEditAnswer> {\n    public async saveAnswer(): Promise<void> {\n        await this.update(async () => {\n            return Promise.resolve({notice: null});\n        });\n        await this.state.answer.save();\n        if (this.state.answer.error === null) {\n            await this.update(async () => {\n                return Promise.resolve({notice: \"Saved answer\"});\n            });\n        }\n    }\n\n    public async deleteAnswer() {\n        await this.state.answer.delete();\n        const nav = new NavigationService();\n        const question = this.state.question;\n        nav.redirect(nav.urlForQuestion(question.state.topic, question.state.questionId));\n    }\n\n    protected async loadInitialData(fromProps: ITopicEditAnswerProps): Promise<void> {\n        await this.update(async () => {\n            const topic = await Topic.get(fromProps.topic);\n            if (topic.error) {\n                throw topic.error;\n            }\n\n            const question = await Question.get(fromProps.question);\n            if (question.error) {\n                throw question.error;\n            }\n\n            const answer = await Answer.get(fromProps.answer);\n            if (answer.error) {\n                throw answer.error;\n            }\n\n            if (answer.state.questionId !== question.state.questionId) {\n                throw new Error(\"Invalid answer id for topic\");\n            }\n\n            return {question, topic, answer};\n        });\n    }\n\n    protected blank(): ITopicEditAnswer {\n        return {\n            answer: new Answer(),\n            notice: null,\n            question: new Question(),\n            topic: new Topic(),\n        };\n    }\n\n    protected rebind(): void {\n        this.state.topic.parent = this;\n        this.state.question.parent = this;\n        this.state.answer.parent = this;\n    }\n}\n","import * as React from \"react\";\nimport {AnswerForm} from \"../../../components/answer/answerForm/answerForm\";\nimport {InfoNotice} from \"../../../components/common/display/infoNotice/infoNotice\";\nimport {LayoutContentContainer} from \"../../../components/layout/layoutContentContainer/layoutContentContainer\";\nimport {LayoutFormContainer} from \"../../../components/layout/layoutFormContainer/layoutFormContainer\";\nimport {LayoutRightBox} from \"../../../components/layout/layoutRightBox/layoutRightBox\";\nimport {LayoutStandardHeader} from \"../../../components/layout/layoutStandardHeader/layoutStandardHeader\";\nimport {LayoutStandardUnsafe} from \"../../../components/layout/layoutStandardUnsafe/layoutStandardUnsafe\";\nimport {QuestionLink, QuestionLinkType} from \"../../../components/question/questionLink/questionLink\";\nimport {QuestionView} from \"../../../components/question/questionView/questionView\";\nimport {ITopicEditAnswerProps, TopicEditAnswer} from \"./topicEditAnswer\";\n\nexport class TopicEditAnswerPage extends React.Component<ITopicEditAnswerProps> {\n    private data: TopicEditAnswer;\n\n    constructor(props: ITopicEditAnswerProps) {\n        super(props);\n        this.data = new TopicEditAnswer(() => this.forceUpdate());\n    }\n\n    public componentDidMount() {\n        this.data.unload();\n        this.data = new TopicEditAnswer(() => this.forceUpdate());\n        this.data.load(this.props);\n    }\n\n    public componentWillUnmount() {\n        this.data.unload();\n    }\n\n    public render() {\n        if (!this.guardInvalidState()) {\n            return \"\";\n        }\n\n        const question = this.data.state.question;\n        const answer = this.data.state.answer;\n        const topic = this.data.state.topic;\n\n        return (\n            <div className={\"component--TopicHomePage\"}>\n                <LayoutStandardHeader user={this.props.user.state}\n                                      topic={topic.state}\n                                      loading={this.data.updating}/>\n                <LayoutContentContainer>\n                    <QuestionView question={question}/>\n                </LayoutContentContainer>\n\n                <LayoutFormContainer error={this.data.state.answer.error}>\n                    <LayoutRightBox expand={true}>\n                        <QuestionLink question={question} target={QuestionLinkType.View}>Close</QuestionLink>\n                    </LayoutRightBox>\n                    <InfoNotice value={this.data.state.notice}/>\n                    <AnswerForm submit={this.saveAnswerEvent} answer={answer} saveText=\"Save\"/>\n                </LayoutFormContainer>\n\n                <LayoutStandardUnsafe user={this.props.user} permissions={[\"CanDelete:Answer\"]}>\n                    <LayoutRightBox expand={true}>\n                        <p>\n                            Delete this answer?\n                        </p>\n                        <p>\n                            Careful! No undo for this!\n                        </p>\n                        <button onClick={this.onDeleteQuestion}>Delete answer</button>\n                    </LayoutRightBox>\n                </LayoutStandardUnsafe>\n            </div>\n        );\n    }\n\n    public guardInvalidState(): boolean {\n        return this.data !== null;\n    }\n\n    private readonly saveAnswerEvent = () => this.data.saveAnswer();\n\n    private onDeleteQuestion = async (e: React.FormEvent) => {\n        e.preventDefault();\n        await this.data.deleteAnswer();\n    }\n}\n","import * as React from \"react\";\r\nimport { LayoutContentContainer } from \"../../../components/layout/layoutContentContainer/layoutContentContainer\";\r\nimport { LayoutFooter } from \"../../../components/layout/layoutFooter/layoutFooter\";\r\nimport NavigationService from \"../../../infrastructure/service/navigationService\";\r\nimport \"./genericHelpPage.css\";\r\n\r\nconst HelpTip = (props: any) => {\r\n    return (\r\n        <div className=\"tip\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport class GenericHelpPage extends React.Component {\r\n    public render() {\r\n        const nav = new NavigationService();\r\n        return (\r\n            <div className={\"component--TopicHomePage\"}>\r\n                <LayoutContentContainer>\r\n                    <h1>Help</h1>\r\n\r\n                    <HelpTip>\r\n                        To start a new topic, just go to {nav.urlForTopic(\"NAME\")}\r\n                    </HelpTip>\r\n\r\n                    <HelpTip>\r\n                        Searching for tags:\r\n                        <code>\r\n                            tag:name tag:name2 some search\r\n                        </code>\r\n                    </HelpTip>\r\n\r\n                    <HelpTip>\r\n                        Searching for anything in a topic:\r\n                        <code>\r\n                            topic:name *\r\n                        </code>\r\n                    </HelpTip>\r\n\r\n                    <HelpTip>\r\n                        Searching in multiple topics:\r\n                        <code>\r\n                            topic:name topic:other query\r\n                        </code>\r\n                    </HelpTip>\r\n\r\n                    <HelpTip>\r\n                        Searching in any topic:\r\n                        <code>\r\n                            topic:* query\r\n                        </code>\r\n                    </HelpTip>\r\n                </LayoutContentContainer>\r\n                <LayoutFooter/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\nimport {Redirect} from \"react-router\";\nimport {UserContext} from \"../../../../../react-pangul-core/src/domain/userContext\";\nimport AuthService from \"../../../../../react-pangul-core/src/services/authService\";\nimport {LayoutContentContainer} from \"../../../components/layout/layoutContentContainer/layoutContentContainer\";\nimport {LayoutRightBox} from \"../../../components/layout/layoutRightBox/layoutRightBox\";\nimport {LayoutStandardHeader} from \"../../../components/layout/layoutStandardHeader/layoutStandardHeader\";\nimport NavigationService from \"../../../infrastructure/service/navigationService\";\nimport \"./genericLogoutPage.css\";\n\nexport interface IGenericLogoutPage {\n    user: UserContext;\n}\n\nexport interface IGenericLogoutPageState {\n    redirect: boolean;\n}\n\nexport class GenericLogoutPage extends React.Component<IGenericLogoutPage, IGenericLogoutPageState> {\n    constructor(props: IGenericLogoutPage) {\n        super(props);\n        this.state = {\n            redirect: false,\n        };\n    }\n\n    public render() {\n        if (this.state.redirect) {\n            return <Redirect to={new NavigationService().urlForRoot()}/>;\n        }\n        return (\n            <div className=\"component--GenericLogoutPage\">\n                <LayoutStandardHeader user={this.props.user.state}\n                                      topic={null}\n                                      loading={this.props.user.updating}/>\n                <LayoutContentContainer>\n                    <h3 className=\"notice\">\n                        Logout?\n                    </h3>\n                    <p>\n                        Are you sure? Your current session will be abandoned.\n                    </p>\n                </LayoutContentContainer>\n                <LayoutContentContainer>\n                    <LayoutRightBox expand={true}>\n                        <button onClick={this.onLogout}>Logout</button>\n                    </LayoutRightBox>\n                </LayoutContentContainer>\n            </div>\n        );\n    }\n\n    private onLogout = async () => {\n        const user = this.props.user;\n        this.setState({redirect: true}, async () => {\n            const authService = new AuthService();\n            await authService.logout(user);\n        });\n    }\n}\n","import * as React from \"react\";\n\nexport interface IInputEditor {\n    value: string;\n    onChange: (body: string) => void;\n}\n\nexport interface IInputEditorState {\n    value: string;\n    lastPropValue: string;\n}\n\nexport class InputEditor extends React.Component<IInputEditor, IInputEditorState> {\n    public static getDerivedStateFromProps(props: IInputEditor, state: IInputEditorState) {\n        if (props.value !== state.lastPropValue) {\n            return {value: props.value, lastPropValue: props.value};\n        }\n        return null;\n    }\n\n    private events: { [key: string]: any } = {};\n\n    constructor(props: IInputEditor) {\n        super(props);\n        this.state = {\n            lastPropValue: \"\",\n            value: \"\",\n        };\n        this.events = {\n            onChange: (e: React.FormEvent<HTMLTextAreaElement>) => this.onChange(e),\n        };\n    }\n\n    public render() {\n        return (\n            <input value={this.state.value} onChange={this.events.onChange}/>\n        );\n    }\n\n    /**\n     * Prevent react from jumping the cursor as you type\n     */\n    private onChange(event: React.FormEvent<HTMLTextAreaElement>) {\n        const value = event.currentTarget.value;\n        this.setState({value}, () => {\n            this.props.onChange(value);\n        });\n    }\n}\n","import * as React from \"react\";\nimport {Answer} from \"../../../../../react-pangul-core/src/domain/answer\";\nimport {Question} from \"../../../../../react-pangul-core/src/domain/question\";\nimport NavigationService from \"../../../infrastructure/service/navigationService\";\nimport \"./answerLink.css\";\n\nexport enum AnswerLinkType {\n    Edit,\n}\n\nexport interface IAnswerLink {\n    question: Question;\n    answer: Answer;\n    target: AnswerLinkType;\n}\n\nexport class AnswerLink extends React.Component<IAnswerLink> {\n    private nav: NavigationService;\n\n    public constructor(props: IAnswerLink) {\n        super(props);\n        this.nav = new NavigationService();\n    }\n\n    public render() {\n        if (!this.props.question.state.questionId) {\n            return (<React.Fragment/>);\n        }\n        const linkUrl = this.getUrl();\n        return (\n            <div className=\"component--AnswerLink\">\n                <a href={linkUrl}>{this.props.children}</a>\n            </div>\n        );\n    }\n\n    private getUrl(): string {\n        switch (this.props.target) {\n            case AnswerLinkType.Edit:\n                return this.nav.urlForAnswerEdit(\n                    this.props.question.state.topic,\n                    this.props.question.state.questionId,\n                    this.props.answer.state.answerId);\n            default:\n                throw new Error(\"Unsupported target\");\n        }\n    }\n}\n","import * as React from \"react\";\nimport {InputEditor} from \"../../common/editors/inputEditor/inputEditor\";\nimport {isSameArray} from \"../../common/utility/sameArray\";\nimport {TagList} from \"../tagList/tagList\";\nimport \"./tagPicker.css\";\n\nexport interface ITagPicker {\n    value: string[];\n    onChange: (tags: string[]) => void;\n}\n\nexport interface ITagPickerStart {\n    lastTags: string[];\n    tagEditValue: string;\n}\n\nexport class TagPicker extends React.Component<ITagPicker, ITagPickerStart> {\n    public static getDerivedStateFromProps(props: ITagPicker, state: ITagPickerStart) {\n        if (!isSameArray(props.value, state.lastTags)) {\n            return {tagEditValue: props.value.join(\", \"), lastTags: props.value};\n        }\n        return null;\n    }\n\n    private static onlyUnique(value: string, index: number, self: string[]) {\n        return self.indexOf(value) === index;\n    }\n\n    private onTagsChangedEvent: (value: string) => void;\n\n    constructor(props: ITagPicker) {\n        super(props);\n        this.state = {\n            lastTags: [],\n            tagEditValue: \"\",\n        };\n        this.onTagsChangedEvent = (value: string) => this.onTagsChanged(value);\n    }\n\n    public render() {\n        return (\n            <div className=\"component--TagPicker\">\n                <InputEditor value={this.state.tagEditValue} onChange={this.onTagsChangedEvent}/>\n                <div className=\"rendered\">\n                    <TagList tags={this.props.value} topic={null}/>\n                </div>\n            </div>\n        );\n    }\n\n    private onTagsChanged(value: string) {\n        this.setState({tagEditValue: value}, () => {\n            const tags = value\n                .split(\",\")\n                .map((i) => i.trim())\n                .filter((i) => i.length > 0)\n                .filter(TagPicker.onlyUnique);\n\n            this.props.onChange(tags);\n        });\n    }\n}\n","export function isSameArray<T>(a: T[], b: T[]): boolean {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n    for (let index = 0; index < a.length; index += 1) {\r\n        if (a[index] !== b[index]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}","import * as React from \"react\";\r\nimport {Question} from \"../../../../../react-pangul-core/src/domain/question\";\r\nimport {InputEditor} from \"../../common/editors/inputEditor/inputEditor\";\r\nimport {MarkdownEditor} from \"../../common/editors/markdownEditor/markdownEditor\";\r\nimport {LayoutIf} from \"../../layout/layoutIf/layoutIf\";\r\nimport {TagPicker} from \"../../tag/tagPicker/tagPicker\";\r\n\r\nexport interface IQuestionForm {\r\n    submit: () => void;\r\n    question: Question;\r\n    saveText: string;\r\n    showTopic: boolean;\r\n}\r\n\r\nexport class QuestionForm extends React.Component<IQuestionForm> {\r\n    private onSaveEvent: (e: React.FormEvent) => void;\r\n    private onTitleChangedEvent: (title: string) => void;\r\n    private onTagsChangedEvent: (tags: string[]) => void;\r\n    private onBodyChangedEvent: (body: string) => void;\r\n\r\n    public constructor(props: IQuestionForm) {\r\n        super(props);\r\n        this.onBodyChangedEvent = (body: string) => this.onBodyChanged(body);\r\n        this.onSaveEvent = (e: React.FormEvent) => this.onSave(e);\r\n        this.onTagsChangedEvent = (tags: string[]) => this.onTagsChanged(tags);\r\n        this.onTitleChangedEvent = (value: string) => this.onTitleChanged(value);\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"component--Question\">\r\n                <form action=\"\" onSubmit={this.onSaveEvent}>\r\n                    <LayoutIf show={this.props.showTopic}>\r\n                        <fieldset>\r\n                            <InputEditor value={this.props.question.state.topic} onChange={this.onTopicChanged}/>\r\n                        </fieldset>\r\n                    </LayoutIf>\r\n                    <fieldset>\r\n                        <InputEditor value={this.props.question.state.title} onChange={this.onTitleChangedEvent}/>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <MarkdownEditor value={this.props.question.state.body} onChange={this.onBodyChangedEvent}/>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <TagPicker value={this.props.question.state.tags} onChange={this.onTagsChangedEvent}/>\r\n                    </fieldset>\r\n                    <fieldset className=\"buttons\">\r\n                        <button className=\"submit\">{this.props.saveText}</button>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onTopicChanged = (topic: string) => {\r\n        this.props.question.update(async () => {\r\n            return {topic};\r\n        });\r\n    }\r\n\r\n    private onSave(e: React.FormEvent) {\r\n        e.preventDefault();\r\n        this.props.submit();\r\n    }\r\n\r\n    private onTitleChanged(title: string) {\r\n        this.props.question.update(async () => {\r\n            return {title};\r\n        });\r\n    }\r\n\r\n    private onTagsChanged(tags: string[]) {\r\n        this.props.question.update(async () => {\r\n            return {tags};\r\n        });\r\n    }\r\n\r\n    private onBodyChanged(body: string) {\r\n        this.props.question.update(async () => {\r\n            return {body};\r\n        });\r\n    }\r\n}\r\n","import {Question} from \"../../../../../react-pangul-core/src/domain/question\";\nimport {Topic} from \"../../../../../react-pangul-core/src/domain/topic\";\nimport {UserContext} from \"../../../../../react-pangul-core/src/domain/userContext\";\nimport {Page} from \"../../../infrastructure/componentHelpers/page\";\n\nexport interface ITopicAskQuestionProps {\n    topic: string;\n    user: UserContext;\n}\n\ninterface ITopicAskQuestion {\n    topic: Topic;\n    question: Question;\n    notice: string | null;\n}\n\nexport class TopicAskQuestion extends Page<ITopicAskQuestionProps, ITopicAskQuestion> {\n    public async askQuestion() {\n        await this.update(async () => {\n            return Promise.resolve({notice: null});\n        });\n        await this.state.question.save();\n        if (this.state.question.error === null) {\n            await this.update(async () => {\n                return Promise.resolve({notice: \"Saved question\"});\n            });\n        }\n    }\n\n    protected async loadInitialData(fromProps: ITopicAskQuestionProps): Promise<void> {\n        await this.update(async () => {\n            const topic = await Topic.get(fromProps.topic);\n            if (topic.error) {\n                throw topic.error;\n            }\n\n            const question = new Question();\n            await question.update(async () => {\n                return {topic: topic.state.name};\n            });\n\n            return {question, topic};\n        });\n    }\n\n    protected blank(): ITopicAskQuestion {\n        return {\n            notice: null,\n            question: new Question(),\n            topic: new Topic(),\n        };\n    }\n\n    protected rebind(): void {\n        this.state.topic.parent = this;\n        this.state.question.parent = this;\n    }\n}\n","import * as React from \"react\";\nimport {InfoNotice} from \"../../../components/common/display/infoNotice/infoNotice\";\nimport {LayoutFormContainer} from \"../../../components/layout/layoutFormContainer/layoutFormContainer\";\nimport {LayoutIf} from \"../../../components/layout/layoutIf/layoutIf\";\nimport {LayoutRightBox} from \"../../../components/layout/layoutRightBox/layoutRightBox\";\nimport {LayoutStandardHeader} from \"../../../components/layout/layoutStandardHeader/layoutStandardHeader\";\nimport {QuestionForm} from \"../../../components/question/questionForm/questionForm\";\nimport {QuestionLink, QuestionLinkType} from \"../../../components/question/questionLink/questionLink\";\nimport {ITopicAskQuestionProps, TopicAskQuestion} from \"./topicAskQuestion\";\n\nexport class TopicAskQuestionPage extends React.Component<ITopicAskQuestionProps> {\n    private data: TopicAskQuestion;\n\n    constructor(props: ITopicAskQuestionProps) {\n        super(props);\n        this.data = new TopicAskQuestion(() => this.forceUpdate());\n    }\n\n    public componentDidMount() {\n        this.data.unload();\n        this.data = new TopicAskQuestion(() => this.forceUpdate());\n        this.data.load(this.props);\n    }\n\n    public componentWillUnmount() {\n        this.data.unload();\n    }\n\n    public render() {\n        if (!this.guardInvalidState()) {\n            return \"\";\n        }\n\n        const question = this.data.state.question;\n        const topic = this.data.state.topic;\n\n        return (\n            <div className={\"component--TopicHomePage\"}>\n                <LayoutStandardHeader user={this.props.user.state}\n                                      topic={topic.state}\n                                      loading={this.data.updating}/>\n                <LayoutFormContainer error={this.data.state.question.error}>\n                    <LayoutIf show={question.state.questionId}>\n                        <LayoutRightBox expand={true}>\n                            <QuestionLink question={question} target={QuestionLinkType.View}>View</QuestionLink>\n                        </LayoutRightBox>\n                    </LayoutIf>\n                    <InfoNotice value={this.data.state.notice}/>\n                    <QuestionForm showTopic={false}\n                                  submit={this.askQuestion}\n                                  question={question}\n                                  saveText=\"Save\"/>\n                </LayoutFormContainer>\n            </div>\n        );\n    }\n\n    public guardInvalidState(): boolean {\n        return this.data !== null;\n    }\n\n    private askQuestion = () => this.data.askQuestion();\n\n}\n","import {Question} from \"../../../../../react-pangul-core/src/domain/question\";\nimport {Topic} from \"../../../../../react-pangul-core/src/domain/topic\";\nimport {UserContext} from \"../../../../../react-pangul-core/src/domain/userContext\";\nimport {Page} from \"../../../infrastructure/componentHelpers/page\";\nimport NavigationService from \"../../../infrastructure/service/navigationService\";\n\nexport interface ITopicEditQuestionProps {\n    topic: string;\n    question: string;\n    user: UserContext;\n}\n\ninterface ITopicEditQuestion {\n    topic: Topic;\n    question: Question;\n    notice: string | null;\n}\n\nexport class TopicEditQuestion extends Page<ITopicEditQuestionProps, ITopicEditQuestion> {\n    public async updateQuestion() {\n        await this.update(async () => {\n            return Promise.resolve({notice: null});\n        });\n        await this.state.question.save();\n        if (this.state.question.error === null) {\n            await this.update(async () => {\n                return Promise.resolve({notice: \"Saved question\"});\n            });\n        }\n    }\n\n    public async deleteQuestion() {\n        await this.state.question.delete();\n        const nav = new NavigationService();\n        const postDeleteUrl = nav.urlForTopic(this.state.topic.state.name);\n        nav.redirect(postDeleteUrl);\n    }\n\n    protected async loadInitialData(fromProps: ITopicEditQuestionProps): Promise<void> {\n        await this.update(async () => {\n            const topic = await Topic.get(fromProps.topic);\n            if (topic.error) {\n                throw topic.error;\n            }\n\n            const question = await Question.get(fromProps.question);\n            if (question.error) {\n                throw question.error;\n            }\n\n            return {question, topic};\n        });\n    }\n\n    protected blank(): ITopicEditQuestion {\n        return {\n            notice: null,\n            question: new Question(),\n            topic: new Topic(),\n        };\n    }\n\n    protected rebind(): void {\n        this.state.topic.parent = this;\n        this.state.question.parent = this;\n    }\n}\n","import * as React from \"react\";\nimport {InfoNotice} from \"../../../components/common/display/infoNotice/infoNotice\";\nimport {LayoutFormContainer} from \"../../../components/layout/layoutFormContainer/layoutFormContainer\";\nimport {LayoutRightBox} from \"../../../components/layout/layoutRightBox/layoutRightBox\";\nimport {LayoutStandardHeader} from \"../../../components/layout/layoutStandardHeader/layoutStandardHeader\";\nimport {LayoutStandardUnsafe} from \"../../../components/layout/layoutStandardUnsafe/layoutStandardUnsafe\";\nimport {QuestionForm} from \"../../../components/question/questionForm/questionForm\";\nimport {QuestionLink, QuestionLinkType} from \"../../../components/question/questionLink/questionLink\";\nimport {ITopicEditQuestionProps, TopicEditQuestion} from \"./topicEditQuestion\";\n\nexport class TopicEditQuestionPage extends React.Component<ITopicEditQuestionProps> {\n    private data: TopicEditQuestion;\n\n    constructor(props: ITopicEditQuestionProps) {\n        super(props);\n        this.data = new TopicEditQuestion(() => this.forceUpdate());\n\n    }\n\n    public componentDidMount() {\n        this.data.unload();\n        this.data = new TopicEditQuestion(() => this.forceUpdate());\n        this.data.load(this.props);\n    }\n\n    public componentWillUnmount() {\n        this.data.unload();\n    }\n\n    public render() {\n        if (!this.guardInvalidState()) {\n            return \"\";\n        }\n\n        const question = this.data.state.question;\n        const topic = this.data.state.topic;\n\n        return (\n            <div className={\"component--TopicHomePage\"}>\n                <LayoutStandardHeader user={this.props.user.state}\n                                      topic={topic.state}\n                                      loading={this.data.updating}/>\n                <LayoutFormContainer error={this.data.state.question.error}>\n                    <LayoutRightBox expand={true}>\n                        <QuestionLink question={question} target={QuestionLinkType.View}>Close</QuestionLink>\n                    </LayoutRightBox>\n\n                    <InfoNotice value={this.data.state.notice}/>\n\n                    <QuestionForm showTopic={true}\n                                  submit={this.onUpdateQuestionEvent}\n                                  question={question}\n                                  saveText=\"Save\"/>\n                </LayoutFormContainer>\n\n                <LayoutStandardUnsafe user={this.props.user} permissions={[\"CanDelete:Question\"]}>\n                    <LayoutRightBox expand={true}>\n                        <p>\n                            Delete this question?\n                        </p>\n                        <p>\n                            Careful! No undo for this!\n                        </p>\n                        <button onClick={this.onDeleteQuestion}>Delete question</button>\n                    </LayoutRightBox>\n                </LayoutStandardUnsafe>\n            </div>\n        );\n    }\n\n    public guardInvalidState(): boolean {\n        return this.data !== null;\n    }\n\n    private onUpdateQuestionEvent = () => this.data.updateQuestion();\n\n    private onDeleteQuestion = async (e: React.FormEvent) => {\n        e.preventDefault();\n        await this.data.deleteQuestion();\n    }\n}\n","import * as React from \"react\";\r\nimport {Answer} from \"../../../../../react-pangul-core/src/domain/answer\";\r\nimport {Question} from \"../../../../../react-pangul-core/src/domain/question\";\r\nimport {Topic} from \"../../../../../react-pangul-core/src/domain/topic\";\r\nimport {SafeMarkdown} from \"../../common/display/safeMarkdown/safeMarkdown\";\r\nimport {LayoutIf} from \"../../layout/layoutIf/layoutIf\";\r\nimport {LayoutRightBottom} from \"../../layout/layoutRightBottom/layoutRightBottom\";\r\nimport {LayoutRightBox} from \"../../layout/layoutRightBox/layoutRightBox\";\r\nimport {VotesAndStars} from \"../../metadata/votesAndStars/votesAndStars\";\r\nimport {UserSummary} from \"../../user/userSummary/userSummary\";\r\nimport {AnswerLink, AnswerLinkType} from \"../answerLink/answerLink\";\r\nimport \"./answerView.css\";\r\n\r\nexport interface IAnswerView {\r\n    answer: Answer;\r\n    question: Question;\r\n    topic: Topic;\r\n}\r\n\r\nexport class AnswerView extends React.Component<IAnswerView> {\r\n    public render() {\r\n        const meta = this.props.answer.state.meta;\r\n\r\n        return (\r\n            <div className=\"component--AnswerView\">\r\n                <LayoutIf show={this.props.answer.state.canEdit}>\r\n                    <LayoutRightBox expand={false}>\r\n                        <AnswerLink question={this.props.question} answer={this.props.answer}\r\n                                    target={AnswerLinkType.Edit}>\r\n                            Edit\r\n                        </AnswerLink>\r\n                    </LayoutRightBox>\r\n                </LayoutIf>\r\n\r\n                <div className=\"metadata\">\r\n                    <VotesAndStars showStars={false}\r\n                                   userStars={0}\r\n                                   userVotes={meta.state.votes}\r\n                                   votes={meta.state.global.votes}\r\n                                   onVote={this.onVote}\r\n                                   onStar={null}/>\r\n                </div>\r\n                <div className=\"output\">\r\n                    <div className=\"rendered\">\r\n                        <SafeMarkdown markdown={this.props.answer.state.body}/>\r\n                    </div>\r\n                    <LayoutRightBottom>\r\n                        <UserSummary user={this.props.answer.state.user}/>\r\n                    </LayoutRightBottom>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onVote = async (votes: number) => {\r\n        if (votes > 0) {\r\n            await this.props.answer.state.meta.voteUp();\r\n        } else if (votes < 0) {\r\n            await this.props.answer.state.meta.voteDown();\r\n        } else {\r\n            await this.props.answer.state.meta.voteNeutral();\r\n        }\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {Answer} from \"../../../../../react-pangul-core/src/domain/answer\";\r\nimport {QuerySet} from \"../../../../../react-pangul-core/src/domain/querySet\";\r\nimport {Question} from \"../../../../../react-pangul-core/src/domain/question\";\r\nimport {Topic} from \"../../../../../react-pangul-core/src/domain/topic\";\r\nimport {LayoutContentContainer} from \"../../layout/layoutContentContainer/layoutContentContainer\";\r\nimport {AnswerView} from \"../answerView/answerView\";\r\n\r\nexport interface IAnswerList {\r\n    answers: QuerySet<Answer>;\r\n    topic: Topic;\r\n    question: Question;\r\n}\r\n\r\nexport interface IAnswerListState {\r\n    pageSize: number;\r\n    page: number;\r\n}\r\n\r\nexport class AnswerList extends React.Component<IAnswerList> {\r\n    public render() {\r\n        return (\r\n            <div className=\"component--AnswerList\">\r\n                {this.renderAnswerList()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public renderAnswerList() {\r\n        if (this.props.answers.state.instances == null) {\r\n            return [];\r\n        }\r\n        return this.props.answers.state.instances.map((answer) => {\r\n            return (\r\n                <LayoutContentContainer key={answer.state.answerId}>\r\n                    <AnswerView answer={answer}\r\n                                question={this.props.question}\r\n                                topic={this.props.topic}/>\r\n                </LayoutContentContainer>\r\n            );\r\n        });\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {IQueryLike} from \"../../../../../../react-pangul-core/src/domain/querySet\";\r\nimport {LayoutContentContainer} from \"../../../layout/layoutContentContainer/layoutContentContainer\";\r\nimport {LayoutIf} from \"../../../layout/layoutIf/layoutIf\";\r\nimport {ErrorNotice} from \"../../errors/errorNotice/errorNotice\";\r\nimport \"./querySetPaginator.css\";\r\n\r\nexport interface IQuerySetPaginator {\r\n    allowedSizes: number[];\r\n    queryState: IQueryLike;\r\n    onNext: () => void;\r\n    onPrev: () => void;\r\n    onChangeSize: (size: number) => void;\r\n    error: Error | null;\r\n}\r\n\r\nexport class QuerySetPaginator extends React.PureComponent<IQuerySetPaginator> {\r\n    public render() {\r\n        const options = this.props.allowedSizes.map((i) => {\r\n            return (\r\n                <option key={i}>{i}</option>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"component--QuerySetPaginator\">\r\n                <ErrorNotice error={this.props.error}/>\r\n                <LayoutContentContainer>\r\n                    <div className=\"parts\">\r\n                        <div className=\"part\">\r\n                            Results per page:\r\n                            <select value={this.props.queryState.pageSize} onChange={this.onChangeSize}>\r\n                                {options}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"part buttons\">\r\n                            <div>\r\n                                <LayoutIf show={this.props.queryState.page > 0}>\r\n                                    <button onClick={this.props.onPrev}>Prev</button>\r\n                                </LayoutIf>\r\n                                <LayoutIf show={this.props.queryState.moreResults}>\r\n                                    <button onClick={this.props.onNext}>Next</button>\r\n                                </LayoutIf>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </LayoutContentContainer>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onChangeSize = (ev: React.FormEvent<HTMLSelectElement>) => {\r\n        const val = Number(ev.currentTarget.value);\r\n        this.props.onChangeSize(val);\r\n    }\r\n}\r\n","import {Answer} from \"../../../../../react-pangul-core/src/domain/answer\";\nimport {QuerySet} from \"../../../../../react-pangul-core/src/domain/querySet\";\nimport {Question} from \"../../../../../react-pangul-core/src/domain/question\";\nimport {Topic} from \"../../../../../react-pangul-core/src/domain/topic\";\nimport {UserContext} from \"../../../../../react-pangul-core/src/domain/userContext\";\nimport {Page} from \"../../../infrastructure/componentHelpers/page\";\n\nconst DEFAULT_PAGE_SIZE = 5;\n\nexport interface ITopicViewQuestionProps {\n    topic: string;\n    question: string;\n    user: UserContext;\n}\n\ninterface ITopicViewQuestion {\n    topic: Topic;\n    question: Question;\n    answers: QuerySet<Answer>;\n    pageSize: number;\n    notice: string | null;\n}\n\nexport class TopicViewQuestion extends Page<ITopicViewQuestionProps, ITopicViewQuestion> {\n    public async next(): Promise<void> {\n        await this.update(async () => {\n            await this.state.answers.next();\n            return null;\n        });\n    }\n\n    public async prev(): Promise<void> {\n        await this.update(async () => {\n            await this.state.answers.prev();\n            return null;\n        });\n    }\n\n    public async setPageSize(pageSize: number) {\n        await this.update(async () => {\n            return {pageSize};\n        });\n        await this.refreshData();\n    }\n\n    protected async loadInitialData(fromProps: ITopicViewQuestionProps): Promise<void> {\n        await this.update(async () => {\n            const topic = await Topic.get(fromProps.topic);\n            if (topic.error) {\n                throw topic.error;\n            }\n\n            const question = await Question.get(fromProps.question);\n            if (question.error) {\n                throw question.error;\n            }\n\n            return {question, topic};\n        });\n\n        await this.refreshData();\n    }\n\n    protected blank(): ITopicViewQuestion {\n        return {\n            answers: new QuerySet<Answer>(),\n            notice: null,\n            pageSize: DEFAULT_PAGE_SIZE,\n            question: new Question(),\n            topic: new Topic(),\n        };\n    }\n\n    protected rebind(): void {\n        this.state.topic.parent = this;\n        this.state.question.parent = this;\n        this.state.answers.parent = this;\n    }\n\n    protected async refreshData(): Promise<void> {\n        await this.update(async () => {\n            const question = this.state.question;\n            const answers = await Answer.search(question.state.questionId, this.state.pageSize);\n            return {answers};\n        });\n    }\n}\n","import * as React from \"react\";\nimport {AnswerList} from \"../../../components/answer/answerList/answerList\";\nimport {QuerySetPaginator} from \"../../../components/common/fragments/querySetPaginator/querySetPaginator\";\nimport {LayoutContentContainer} from \"../../../components/layout/layoutContentContainer/layoutContentContainer\";\nimport {LayoutIf} from \"../../../components/layout/layoutIf/layoutIf\";\nimport {LayoutRightBox} from \"../../../components/layout/layoutRightBox/layoutRightBox\";\nimport {LayoutStandardHeader} from \"../../../components/layout/layoutStandardHeader/layoutStandardHeader\";\nimport {QuestionLink, QuestionLinkType} from \"../../../components/question/questionLink/questionLink\";\nimport {QuestionView} from \"../../../components/question/questionView/questionView\";\nimport {TopicLink, TopicLinkType} from \"../../../components/topic/topicLink/topicLink\";\nimport {ITopicViewQuestionProps, TopicViewQuestion} from \"./topicViewQuestion\";\n\nexport class TopicViewQuestionPage extends React.Component<ITopicViewQuestionProps> {\n    private data: TopicViewQuestion;\n\n    constructor(props: ITopicViewQuestionProps) {\n        super(props);\n        this.data = new TopicViewQuestion(() => this.forceUpdate());\n\n    }\n\n    public componentDidMount() {\n        this.data.unload();\n        this.data = new TopicViewQuestion(() => this.forceUpdate());\n        this.data.load(this.props);\n    }\n\n    public componentWillUnmount() {\n        this.data.unload();\n    }\n\n    public render() {\n        if (!this.guardInvalidState()) {\n            return \"\";\n        }\n\n        const question = this.data.state.question;\n        const answers = this.data.state.answers;\n        const topic = this.data.state.topic;\n\n        return (\n            <div className={\"component--TopicViewQuestionPage\"}>\n                <LayoutStandardHeader user={this.props.user.state}\n                                      topic={topic.state}\n                                      loading={this.data.updating}/>\n\n                <LayoutContentContainer>\n                    <LayoutRightBox expand={false}>\n                        <LayoutIf show={question.state.canEdit}>\n                            <QuestionLink question={question} target={QuestionLinkType.Edit}>Edit</QuestionLink>\n                        </LayoutIf>\n                        <TopicLink topic={question.state.topic} target={TopicLinkType.View}>Close</TopicLink>\n                    </LayoutRightBox>\n                    <QuestionView question={question}/>\n                </LayoutContentContainer>\n\n                <AnswerList topic={this.data.state.topic}\n                            question={this.data.state.question}\n                            answers={this.data.state.answers}/>\n\n                <QuerySetPaginator allowedSizes={[1, 5, 10, 25]}\n                                   queryState={answers.state}\n                                   onChangeSize={this.onChangeSize}\n                                   onNext={this.onNext}\n                                   onPrev={this.onPrev}\n                                   error={answers.error}/>\n\n                <LayoutContentContainer>\n                    <LayoutRightBox expand={true}>\n                        <QuestionLink question={question} target={QuestionLinkType.Answer}>\n                            <button>Answer Question</button>\n                        </QuestionLink>\n                    </LayoutRightBox>\n                </LayoutContentContainer>\n            </div>\n        );\n    }\n\n    public guardInvalidState(): boolean {\n        return this.data !== null;\n    }\n\n    private onChangeSize = (size: number) => this.data.setPageSize(size);\n\n    private onNext = () => this.data.next();\n\n    private onPrev = () => this.data.prev();\n}\n","import * as React from \"react\";\r\nimport { Subject } from \"rxjs\";\r\nimport { debounceTime } from \"rxjs/operators\";\r\nimport { LayoutFormContainer } from \"../../../layout/layoutFormContainer/layoutFormContainer\";\r\nimport { InputEditor } from \"../../editors/inputEditor/inputEditor\";\r\nimport \"./searchBar.css\";\r\n\r\nexport interface ISearchBar {\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n    error: Error | null;\r\n    debounce: number;\r\n}\r\n\r\nexport class SearchBar extends React.Component<ISearchBar> {\r\n    public static defaultProps: Partial<ISearchBar> = {\r\n        debounce: 200,\r\n    };\r\n\r\n    private searchStream = new Subject<string>();\r\n\r\n    constructor(props: ISearchBar) {\r\n        super(props);\r\n        this.searchStream.pipe(debounceTime(this.props.debounce)).subscribe(async (value: string) => {\r\n            this.props.onChange(value);\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"component--SearchBar\">\r\n                <LayoutFormContainer error={this.props.error}>\r\n                    <form>\r\n                        <fieldset>\r\n                            <InputEditor value={this.props.value} onChange={this.onChangeEvent}/>\r\n                        </fieldset>\r\n                    </form>\r\n                </LayoutFormContainer>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onChangeEvent = (value: string) => this.searchStream.next(value);\r\n}\r\n","import * as React from \"react\";\r\nimport { Topic } from \"../../../../../react-pangul-core/src/domain/topic\";\r\nimport { TopicLink, TopicLinkType } from \"../topicLink/topicLink\";\r\nimport \"./topicView.css\";\r\n\r\nexport interface ITopicView {\r\n    topic: Topic;\r\n}\r\n\r\nconst TopicIcon = (props: ITopicView) => {\r\n    if (!props.topic.state.icon) {\r\n        return <React.Fragment/>;\r\n    }\r\n    return (\r\n        <div className=\"icon\">\r\n            <img src={props.topic.state.icon}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport class TopicView extends React.Component<ITopicView> {\r\n    public render() {\r\n        const description = this.props.topic.state.description || \"no description\";\r\n        return (\r\n            <div className=\"component--TopicView\">\r\n                <TopicIcon topic={this.props.topic}/>\r\n                <div>\r\n                    <div>\r\n                        <TopicLink topic={this.props.topic.state.name} target={TopicLinkType.View}>\r\n                            <h2>{this.props.topic.state.name}</h2>\r\n                        </TopicLink>\r\n                    </div>\r\n                    <div>{description}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {QuerySet} from \"../../../../../react-pangul-core/src/domain/querySet\";\r\nimport {Topic} from \"../../../../../react-pangul-core/src/domain/topic\";\r\nimport {LayoutContentContainer} from \"../../layout/layoutContentContainer/layoutContentContainer\";\r\nimport {TopicView} from \"../topicView/topicView\";\r\nimport \"./topicList.css\";\r\n\r\nexport interface ITopicList {\r\n    topics: QuerySet<Topic>;\r\n}\r\n\r\nexport interface ITopicListState {\r\n    pageSize: number;\r\n    page: number;\r\n}\r\n\r\nexport class TopicList extends React.Component<ITopicList, ITopicListState> {\r\n    constructor(props: ITopicList) {\r\n        super(props);\r\n        this.state = {\r\n            page: 0,\r\n            pageSize: 10,\r\n        };\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"component--TopicList\">\r\n                {this.renderList()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public renderList() {\r\n        if (this.props.topics.state.instances == null) {\r\n            return [];\r\n        }\r\n        return this.props.topics.state.instances.map((topic) => {\r\n            if (!topic.state.topicId) {\r\n                return (<React.Fragment/>);\r\n            }\r\n            return (\r\n                <div className=\"item\" key={topic.state.topicId}>\r\n                    <LayoutContentContainer>\r\n                        <TopicView topic={topic}/>\r\n                    </LayoutContentContainer>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n}\r\n","import { QuerySet } from \"../../../../../react-pangul-core/src/domain/querySet\";\nimport { Topic } from \"../../../../../react-pangul-core/src/domain/topic\";\nimport { UserContext } from \"../../../../../react-pangul-core/src/domain/userContext\";\nimport { Page } from \"../../../infrastructure/componentHelpers/page\";\n\nexport interface ITopicDiscoverProps {\n    search: string;\n    user: UserContext;\n}\n\ninterface ITopicDiscover {\n    search: string;\n    topics: QuerySet<Topic>;\n}\n\nexport class TopicDiscover extends Page<ITopicDiscoverProps, ITopicDiscover> {\n    constructor(forceUpdate: () => void) {\n        super(forceUpdate);\n    }\n\n    public async search(value: string): Promise<void> {\n        await this.update(async () => {\n            return {search: value};\n        });\n\n        await this.update(async () => {\n            const topics = await Topic.search(value);\n            if (topics.error) {\n                throw topics.error;\n            }\n\n            return {topics};\n        });\n    }\n\n    protected async loadInitialData(fromProps: ITopicDiscoverProps): Promise<void> {\n        await this.update(async () => {\n            const topics = await Topic.search(fromProps.search);\n            if (topics.error) {\n                throw topics.error;\n            }\n\n            return {topics, search: fromProps.search};\n        });\n    }\n\n    protected blank(): ITopicDiscover {\n        return {\n            search: \"\",\n            topics: new QuerySet<Topic>(),\n        };\n    }\n\n    protected rebind(): void {\n        this.state.topics.parent = this;\n    }\n}\n","import * as React from \"react\";\nimport { SearchBar } from \"../../../components/common/fragments/searchBar/searchBar\";\nimport { LayoutStandardHeader } from \"../../../components/layout/layoutStandardHeader/layoutStandardHeader\";\nimport { TopicList } from \"../../../components/topic/topicList/topicList\";\nimport { ITopicDiscoverProps, TopicDiscover } from \"./topicDiscover\";\n\nexport class TopicDiscoverPage extends React.Component<ITopicDiscoverProps> {\n    private data: TopicDiscover;\n\n    constructor(props: ITopicDiscoverProps) {\n        super(props);\n        this.data = new TopicDiscover(() => this.forceUpdate());\n    }\n\n    public componentDidMount() {\n        this.data.unload();\n        this.data = new TopicDiscover(() => this.forceUpdate());\n        this.data.load(this.props);\n    }\n\n    public componentWillUnmount() {\n        this.data.unload();\n    }\n\n    public render() {\n        if (!this.guardInvalidState()) {\n            return (<React.Fragment/>);\n        }\n\n        const search = this.data.state.search;\n        const topics = this.data.state.topics;\n\n        return (\n            <div className={\"component--TopicDiscoverPage\"}>\n                <LayoutStandardHeader user={this.props.user.state}\n                                      topic={null}\n                                      loading={this.data.updating}/>\n\n                <SearchBar value={search}\n                           onChange={this.onSearchEvent}\n                           error={this.data.error}/>\n\n                <TopicList topics={topics}/>\n            </div>\n        );\n    }\n\n    public guardInvalidState(): boolean {\n        return this.data !== null;\n    }\n\n    private onSearchEvent = (value: string) => this.onSearch(value);\n\n    private onSearch(value: string) {\n        this.data.search(value);\n    }\n}\n","import * as React from \"react\";\r\nimport \"./inlineImgEditor.css\";\r\n\r\nexport interface IInlineImgEditor {\r\n    value: string | null;\r\n    onChange: (body: string) => void;\r\n}\r\n\r\nexport interface IInlineImgEditorState {\r\n    value: string;\r\n    loaded: number;\r\n    total: number;\r\n    loading: boolean;\r\n    lastPropValue: string;\r\n}\r\n\r\nconst RenderImg = (props: IInlineImgEditor) => {\r\n    if (!props.value) {\r\n        return (<React.Fragment/>);\r\n    }\r\n    return (\r\n        <img src={props.value}/>\r\n    );\r\n};\r\n\r\nexport class InlineImgEditor extends React.Component<IInlineImgEditor, IInlineImgEditorState> {\r\n    public static getDerivedStateFromProps(props: IInlineImgEditor, state: IInlineImgEditorState) {\r\n        if (props.value !== state.lastPropValue) {\r\n            return {value: props.value, lastPropValue: props.value};\r\n        }\r\n        return null;\r\n    }\r\n\r\n    constructor(props: IInlineImgEditor) {\r\n        super(props);\r\n        this.state = {\r\n            lastPropValue: \"\",\r\n            loaded: 0,\r\n            loading: false,\r\n            total: 0,\r\n            value: \"\",\r\n        };\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"component--InlineImgEditor\">\r\n                <div className=\"preview\">\r\n                    <RenderImg {...this.props}/>\r\n                </div>\r\n                {!this.state.loading ? <React.Fragment/> : (\r\n                    <div className=\"progress\">\r\n                        {this.state.loaded} / {this.state.total}\r\n                    </div>\r\n                )}\r\n                <input type=\"file\" onChange={this.onChangeEvent}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onChangeEvent = (e: React.FormEvent<HTMLInputElement>) => this.onChange(e);\r\n\r\n    /**\r\n     * Prevent react from jumping the cursor as you type\r\n     */\r\n    private onChange(event: React.FormEvent<HTMLInputElement>) {\r\n        if (event.currentTarget.files && event.currentTarget.files.length > 0) {\r\n            const file = event.currentTarget.files [0];\r\n            const reader = new FileReader();\r\n            this.setState({loading: true}, () => {\r\n                reader.onloadend = (ev: ProgressEvent) => {\r\n                    const value = reader.result as string;\r\n                    this.setState({\r\n                        loaded: ev.loaded,\r\n                        loading: false,\r\n                        total: ev.total,\r\n                        value,\r\n                    }, () => {\r\n                        this.props.onChange(value);\r\n                    });\r\n                };\r\n                reader.onprogress = (ev: ProgressEvent) => {\r\n                    this.setState({\r\n                        loaded: ev.loaded,\r\n                        total: ev.total,\r\n                    });\r\n                };\r\n                reader.readAsDataURL(file);\r\n            });\r\n        }\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport { Topic } from \"../../../../../react-pangul-core/src/domain/topic\";\r\nimport { InlineImgEditor } from \"../../common/editors/inlineImgEditor/inlineImgEditor\";\r\nimport { InputEditor } from \"../../common/editors/inputEditor/inputEditor\";\r\n\r\nexport interface ITopicForm {\r\n    submit: () => void;\r\n    topic: Topic;\r\n    saveText: string;\r\n}\r\n\r\nexport class TopicForm extends React.Component<ITopicForm> {\r\n    public render() {\r\n        return (\r\n            <div className=\"component--Question\">\r\n                <form action=\"\" onSubmit={this.onSaveEvent}>\r\n                    <fieldset>\r\n                        <InputEditor value={this.props.topic.state.description} onChange={this.onDescChangedEvent}/>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <InlineImgEditor value={this.props.topic.state.icon} onChange={this.onIconChangedEvent}/>\r\n                    </fieldset>\r\n                    <fieldset className=\"buttons\">\r\n                        <button className=\"submit\">{this.props.saveText}</button>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onDescChangedEvent = (desc: string) => this.onDescChanged(desc);\r\n    private onIconChangedEvent = (icon: string) => this.onIconChanged(icon);\r\n    private onSaveEvent = (e: React.FormEvent) => this.onSave(e);\r\n\r\n    private onSave(e: React.FormEvent) {\r\n        e.preventDefault();\r\n        this.props.submit();\r\n    }\r\n\r\n    private onDescChanged(desc: string) {\r\n        this.props.topic.update(async () => {\r\n            return {description: desc};\r\n        });\r\n    }\r\n\r\n    private onIconChanged(icon: string) {\r\n        this.props.topic.update(async () => {\r\n            return {icon};\r\n        });\r\n    }\r\n}\r\n","import {Topic} from \"../../../../../react-pangul-core/src/domain/topic\";\nimport {UserContext} from \"../../../../../react-pangul-core/src/domain/userContext\";\nimport {Page} from \"../../../infrastructure/componentHelpers/page\";\n\nexport interface ITopicEditProps {\n    topic: string;\n    user: UserContext;\n}\n\ninterface ITopicEdit {\n    topic: Topic;\n    notice: string | null;\n}\n\nexport class TopicEdit extends Page<ITopicEditProps, ITopicEdit> {\n    public async saveTopic() {\n        await this.update(async () => {\n            return Promise.resolve({notice: null});\n        });\n        await this.state.topic.save();\n        if (this.state.topic.error === null) {\n            await this.update(async () => {\n                return Promise.resolve({notice: \"Saved topic\"});\n            });\n        }\n    }\n\n    public async deleteTopic() {\n        await this.state.topic.delete();\n    }\n\n    protected async loadInitialData(fromProps: ITopicEditProps): Promise<void> {\n        await this.update(async () => {\n            const topic = await Topic.get(fromProps.topic);\n            if (topic.error) {\n                throw topic.error;\n            }\n\n            return {topic};\n        });\n    }\n\n    protected blank(): ITopicEdit {\n        return {\n            notice: null,\n            topic: new Topic(),\n        };\n    }\n\n    protected rebind(): void {\n        this.state.topic.parent = this;\n    }\n}\n","import * as React from \"react\";\nimport {Redirect} from \"react-router\";\nimport {InfoNotice} from \"../../../components/common/display/infoNotice/infoNotice\";\nimport {LayoutContentContainer} from \"../../../components/layout/layoutContentContainer/layoutContentContainer\";\nimport {LayoutFormContainer} from \"../../../components/layout/layoutFormContainer/layoutFormContainer\";\nimport {LayoutRightBox} from \"../../../components/layout/layoutRightBox/layoutRightBox\";\nimport {LayoutStandardHeader} from \"../../../components/layout/layoutStandardHeader/layoutStandardHeader\";\nimport {LayoutUnsafeBox} from \"../../../components/layout/layoutUnsafeBox/layoutUnsafeBox\";\nimport {LayoutWithPermissions} from \"../../../components/layout/layoutWithPermissions/layoutWithPermissions\";\nimport {TopicForm} from \"../../../components/topic/topicForm/topicForm\";\nimport NavigationService from \"../../../infrastructure/service/navigationService\";\nimport {ITopicEditProps, TopicEdit} from \"./topicEdit\";\n\nexport class TopicEditPage extends React.Component<ITopicEditProps> {\n    private data: TopicEdit;\n    private redirect: boolean;\n\n    constructor(props: ITopicEditProps) {\n        super(props);\n        this.redirect = false;\n        this.data = new TopicEdit(() => this.forceUpdate());\n    }\n\n    public componentDidMount() {\n        this.data.unload();\n        this.data = new TopicEdit(() => this.forceUpdate());\n        this.data.load(this.props);\n    }\n\n    public componentWillUnmount() {\n        this.data.unload();\n    }\n\n    public render() {\n        if (this.redirect) {\n            const home = new NavigationService().urlForRoot();\n            return <Redirect to={home}/>;\n        }\n\n        if (!this.guardInvalidState()) {\n            return <React.Fragment/>;\n        }\n\n        const topic = this.data.state.topic;\n\n        return (\n            <div className={\"component--TopicHomePage\"}>\n                <LayoutStandardHeader user={this.props.user.state}\n                                      topic={topic.state}\n                                      loading={this.data.updating}/>\n\n                <LayoutFormContainer error={this.data.state.topic.error}>\n                    <InfoNotice value={this.data.state.notice}/>\n                    <TopicForm submit={this.onSubmitFormEvent} topic={topic} saveText=\"Save\"/>\n                </LayoutFormContainer>\n\n                <LayoutWithPermissions user={this.props.user} requirePermissions={[\"CanDelete:Topic\"]}>\n                    <LayoutContentContainer>\n                        <LayoutUnsafeBox title=\"Unsafe commands\">\n                            <form>\n                                <fieldset>\n                                    <LayoutRightBox expand={true}>\n                                        <p>\n                                            Accidentally created this topic?\n                                        </p>\n                                        <p>\n                                            If it has no questions it can be deleted.\n                                        </p>\n                                        <p>\n                                            Careful! No undo for this!\n                                        </p>\n                                        <button onClick={this.onDeleteTopic}>Delete topic</button>\n                                    </LayoutRightBox>\n                                </fieldset>\n                            </form>\n                        </LayoutUnsafeBox>\n                    </LayoutContentContainer>\n                </LayoutWithPermissions>\n            </div>\n        );\n    }\n\n    public guardInvalidState(): boolean {\n        return this.data !== null;\n    }\n\n    private onSubmitFormEvent = async () => await this.data.saveTopic();\n\n    private onDeleteTopic = async (e: React.FormEvent) => {\n        e.preventDefault();\n        await this.data.deleteTopic();\n        if (!this.data.state.topic.error) {\n            this.redirect = true;\n        }\n    }\n}\n","import * as React from \"react\";\nimport \"./votesAndStarsReadonly.css\";\n\nexport interface IVotesAndStarsReadonly {\n    votes: number;\n    userVotes: number;\n    userStars: number;\n}\n\nexport class VotesAndStarsReadonly extends React.Component<IVotesAndStarsReadonly> {\n    public render() {\n        const upStyles = this.props.userVotes > 0 ? [\"up\", \"active\"] : [\"up\"];\n        const downStyles = this.props.userVotes < 0 ? [\"down\", \"active\"] : [\"down\"];\n        const starStyles = this.props.userStars > 0 ? [\"star\", \"active\"] : [\"star\"];\n        return (\n            <div className=\"component--VotesAndStarsReadonly\">\n                <li>\n                    <div className={upStyles.join(\" \")}/>\n                </li>\n                <li>\n                    <div className=\"votes\">{this.props.votes}</div>\n                </li>\n                <li>\n                    <div className={downStyles.join(\" \")} />\n                </li>\n                <li className=\"star-container\">\n                    <div className={starStyles.join(\" \")}/>\n                </li>\n            </div>\n        )\n    }\n}\n","import * as React from \"react\";\r\nimport {QuestionSummary} from \"../../../../../react-pangul-core/src/domain/questionSummary\";\r\nimport {SafeMarkdown} from \"../../common/display/safeMarkdown/safeMarkdown\";\r\nimport {LayoutRightBottom} from \"../../layout/layoutRightBottom/layoutRightBottom\";\r\nimport {VotesAndStarsReadonly} from \"../../metadata/votesAndStarsReadonly/votesAndStarsReadonly\";\r\nimport {TagList} from \"../../tag/tagList/tagList\";\r\nimport {UserSummary} from \"../../user/userSummary/userSummary\";\r\nimport {QuestionLink, QuestionLinkType} from \"../questionLink/questionLink\";\r\nimport \"./questionSummaryView.css\";\r\n\r\nexport interface IQuestionSummaryView {\r\n    question: QuestionSummary;\r\n}\r\n\r\nexport class QuestionSummaryView extends React.Component<IQuestionSummaryView> {\r\n    public render() {\r\n        const meta = this.props.question.state.meta;\r\n        return (\r\n            <div className=\"component--QuestionSummaryView\">\r\n                <div className=\"metadata\">\r\n                    <VotesAndStarsReadonly\r\n                        userStars={meta.state.star ? 1 : 0}\r\n                        userVotes={meta.state.votes}\r\n                        votes={meta.state.global.votes}/>\r\n                </div>\r\n                <div className=\"output\">\r\n                    <QuestionLink question={this.props.question} target={QuestionLinkType.View}>\r\n                        <h2>{this.props.question.state.title}</h2>\r\n                    </QuestionLink>\r\n                    <TagList tags={this.props.question.state.tags} topic={this.props.question.state.topic}/>\r\n                    <SafeMarkdown markdown={this.props.question.state.summary}/>\r\n                    {this.renderAnswer()}\r\n                    <LayoutRightBottom>\r\n                        <UserSummary user={this.props.question.state.user}/>\r\n                    </LayoutRightBottom>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderAnswer() {\r\n        if (!this.props.question.state.answer) {\r\n            return <React.Fragment/>;\r\n        }\r\n        return (\r\n            <div className=\"answer\">\r\n                <SafeMarkdown markdown={this.props.question.state.answer}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {QuerySet} from \"../../../../../react-pangul-core/src/domain/querySet\";\r\nimport {QuestionSummary} from \"../../../../../react-pangul-core/src/domain/questionSummary\";\r\nimport {LayoutContentContainer} from \"../../layout/layoutContentContainer/layoutContentContainer\";\r\nimport {QuestionSummaryView} from \"../questionSummaryView/questionSummaryView\";\r\nimport \"./questionSummaryList.css\";\r\n\r\nexport interface IQuestionSummaryList {\r\n    questions: QuerySet<QuestionSummary>;\r\n}\r\n\r\nexport interface IQuestionSummaryListState {\r\n    pageSize: number;\r\n    page: number;\r\n}\r\n\r\nexport class QuestionSummaryList extends React.Component<IQuestionSummaryList, IQuestionSummaryListState> {\r\n    constructor(props: IQuestionSummaryList) {\r\n        super(props);\r\n        this.state = {\r\n            page: 0,\r\n            pageSize: 10,\r\n        };\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"component--QuestionSummaryList\">\r\n                {this.renderList()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public renderList() {\r\n        if (this.props.questions.state.instances === null || this.props.questions.state.instances.length === 0) {\r\n            return (\r\n                <LayoutContentContainer>\r\n                    No questions found\r\n                </LayoutContentContainer>\r\n            );\r\n        }\r\n        return this.props.questions.state.instances.map((question) => {\r\n            if (!question.state.questionId) {\r\n                return (<React.Fragment/>);\r\n            }\r\n            return (\r\n                <LayoutContentContainer key={question.state.questionId}>\r\n                    <QuestionSummaryView question={question}/>\r\n                </LayoutContentContainer>\r\n            );\r\n        });\r\n    }\r\n}\r\n","import {Model} from \"../../../react-stateful/src/model\";\nimport {QuestionsController} from \"../controllers/questionsController\";\nimport {IQueryResult, QuerySet} from \"./querySet\";\nimport {QuestionMeta} from \"./questionMeta\";\nimport {UserView} from \"./userView\";\n\nexport interface IQuestionSummary {\n    canEdit: boolean;\n    questionId: string;\n    topic: string;\n    title: string;\n    summary: string;\n    answer: string | null;\n    tags: string[];\n    user: UserView;\n    meta: QuestionMeta;\n}\n\nexport class QuestionSummary extends Model<IQuestionSummary> {\n    /** Return a answer instance */\n    public static async get(questionId: string): Promise<QuestionSummary> {\n        const question = new QuestionSummary();\n        question.state.questionId = questionId;\n        await question.refresh();\n        return question;\n    }\n\n    /** Search for topics */\n    public static search(query: string, pageSize: number = 10, page: number = 0): Promise<QuerySet<QuestionSummary>> {\n        return QuerySet.fromQuery({\n            fetchIds: QuestionSummary.searchForIds,\n            fetchInstance: QuestionSummary.get,\n            pageSize,\n            query,\n        }, page);\n    }\n\n    private static async searchForIds(query: string, offset: number, limit: number): Promise<IQueryResult> {\n        const controller = new QuestionsController();\n        return await controller.search(query, offset, limit);\n    }\n\n    /** Refresh a answer instance */\n    public async refresh(): Promise<void> {\n        await this.update(async () => await this.fetchQuestionData(this.state.questionId));\n    }\n\n    protected blank(): IQuestionSummary {\n        return {\n            answer: null,\n            canEdit: false,\n            meta: new QuestionMeta(),\n            questionId: \"\",\n            summary: \"...\",\n            tags: [],\n            title: \"new answer\",\n            topic: \"default\",\n            user: new UserView(),\n        };\n    }\n\n    protected async fetchQuestionData(questionId: string): Promise<IQuestionSummary> {\n        const controller = new QuestionsController();\n        const questionData = await controller.getSummary(questionId);\n        const meta = new QuestionMeta(await controller.getMetadata(questionId));\n        const user = await UserView.get(questionData.userId);\n        return {\n            ...questionData,\n            meta,\n            user,\n        };\n    }\n\n    protected rebind(): void {\n        this.state.meta.parent = this;\n    }\n}\n","import { QuerySet } from \"../../../../../react-pangul-core/src/domain/querySet\";\nimport { QuestionSummary } from \"../../../../../react-pangul-core/src/domain/questionSummary\";\nimport { Topic } from \"../../../../../react-pangul-core/src/domain/topic\";\nimport { UserContext } from \"../../../../../react-pangul-core/src/domain/userContext\";\nimport { Page } from \"../../../infrastructure/componentHelpers/page\";\n\nconst DEFAULT_PAGE_SIZE = 5;\n\nexport interface ITopicViewQuestionProps {\n    topic: string;\n    search: string;\n    user: UserContext;\n}\n\ninterface ITopicHome {\n    topic: Topic;\n    search: string;\n    pageSize: number;\n    questions: QuerySet<QuestionSummary>;\n}\n\nexport class TopicSearch extends Page<ITopicViewQuestionProps, ITopicHome> {\n    constructor(forceUpdate: () => void) {\n        super(forceUpdate);\n    }\n\n    public async search(value: string): Promise<void> {\n        await this.update(async () => {\n            return {search: value};\n        });\n\n        await this.refreshData();\n    }\n\n    public async next(): Promise<void> {\n        await this.state.questions.next();\n    }\n\n    public async prev(): Promise<void> {\n        await this.state.questions.prev();\n    }\n\n    public async setPageSize(pageSize: number) {\n        await this.update(async () => {\n            return {pageSize};\n        });\n        await this.refreshData();\n    }\n\n    protected async loadInitialData(fromProps: ITopicViewQuestionProps): Promise<void> {\n        await this.update(async () => {\n            const topic = await Topic.get(fromProps.topic);\n            if (topic.error) {\n                throw topic.error;\n            }\n\n            return {topic, search: fromProps.search};\n        });\n        await this.refreshData();\n    }\n\n    protected async refreshData(): Promise<void> {\n        await this.update(async () => {\n            const query = `topic:${this.state.topic.state.name} ${this.state.search}`;\n            const questions = await QuestionSummary.search(query, this.state.pageSize);\n            if (questions.error) {\n                throw questions.error;\n            }\n\n            return {questions};\n        });\n    }\n\n    protected blank(): ITopicHome {\n        return {\n            pageSize: DEFAULT_PAGE_SIZE,\n            questions: new QuerySet<QuestionSummary>(),\n            search: \"\",\n            topic: new Topic(),\n        };\n    }\n\n    protected rebind(): void {\n        this.state.topic.parent = this;\n        this.state.questions.parent = this;\n    }\n}\n","import * as React from \"react\";\nimport {QuerySetPaginator} from \"../../../components/common/fragments/querySetPaginator/querySetPaginator\";\nimport {SearchBar} from \"../../../components/common/fragments/searchBar/searchBar\";\nimport {LayoutContentContainer} from \"../../../components/layout/layoutContentContainer/layoutContentContainer\";\nimport {LayoutRightBox} from \"../../../components/layout/layoutRightBox/layoutRightBox\";\nimport {LayoutStandardHeader} from \"../../../components/layout/layoutStandardHeader/layoutStandardHeader\";\nimport {QuestionSummaryList} from \"../../../components/question/questionSummaryList/questionSummaryList\";\nimport {TopicLink, TopicLinkType} from \"../../../components/topic/topicLink/topicLink\";\nimport {ITopicViewQuestionProps, TopicSearch} from \"./topicSearch\";\n\ninterface ITopicViewQuestionState {\n    lastSearchProp: string;\n}\n\nexport class TopicSearchPage extends React.Component<ITopicViewQuestionProps, ITopicViewQuestionState> {\n    private data: TopicSearch;\n\n    constructor(props: ITopicViewQuestionProps) {\n        super(props);\n        this.data = new TopicSearch(() => this.forceUpdate());\n        this.state = {\n            lastSearchProp: \"\"\n        };\n    }\n\n    public componentDidMount() {\n        this.data.unload();\n        this.data = new TopicSearch(() => this.forceUpdate());\n        this.data.load(this.props);\n    }\n\n    public componentWillUnmount() {\n        this.data.unload();\n    }\n\n    public componentDidUpdate(prevProps: Readonly<ITopicViewQuestionProps>, prevState: Readonly<{}>, snapshot?: any): void {\n        if (this.props.search !== this.state.lastSearchProp) {\n            this.setState({lastSearchProp: this.props.search}, () => {\n                this.data.load(this.props);\n            });\n        }\n    }\n\n    public render() {\n        if (!this.guardInvalidState()) {\n            return (<React.Fragment/>);\n        }\n\n        const questions = this.data.state.questions;\n        const search = this.data.state.search;\n        const topic = this.data.state.topic;\n\n        return (\n            <div className={\"component--TopicSearchPage\"}>\n                <LayoutStandardHeader user={this.props.user.state}\n                                      topic={topic.state}\n                                      loading={this.data.updating}/>\n\n                <SearchBar error={this.data.error}\n                           value={search}\n                           onChange={this.onSearchEvent}/>\n\n                <QuestionSummaryList questions={questions}/>\n\n                <QuerySetPaginator allowedSizes={[1, 5, 10, 25]}\n                                   queryState={questions.state}\n                                   onChangeSize={this.onChangeSize}\n                                   onNext={this.onNext}\n                                   onPrev={this.onPrev}\n                                   error={questions.error}/>\n\n                <LayoutContentContainer>\n                    <LayoutRightBox expand={true}>\n                        <TopicLink target={TopicLinkType.AddQuestion} topic={this.props.topic}>\n                            <button>Ask question</button>\n                        </TopicLink>\n                    </LayoutRightBox>\n                </LayoutContentContainer>\n            </div>\n        );\n    }\n\n    public guardInvalidState(): boolean {\n        return this.data !== null;\n    }\n\n    private onSearchEvent = (value: string) => this.data.search(value);\n\n    private onChangeSize = (size: number) => this.data.setPageSize(size);\n\n    private onNext = () => this.data.next();\n\n    private onPrev = () => this.data.prev();\n}\n","import {QuerySet} from \"../../../../../react-pangul-core/src/domain/querySet\";\nimport {QuestionSummary} from \"../../../../../react-pangul-core/src/domain/questionSummary\";\nimport {UserContext} from \"../../../../../react-pangul-core/src/domain/userContext\";\nimport {Page} from \"../../../infrastructure/componentHelpers/page\";\n\nconst DEFAULT_PAGE_SIZE = 5;\n\nexport interface IUserViewSelfProfileProps {\n    user: UserContext;\n}\n\ninterface IUserViewSelfProfile {\n    starQuestions: QuerySet<QuestionSummary>;\n    pageSize: number;\n}\n\nexport class UserViewSelfProfile extends Page<IUserViewSelfProfileProps, IUserViewSelfProfile> {\n    public async next(): Promise<void> {\n        await this.update(async () => {\n            await this.state.starQuestions.next();\n            return null;\n        });\n    }\n\n    public async prev(): Promise<void> {\n        await this.update(async () => {\n            await this.state.starQuestions.prev();\n            return null;\n        });\n    }\n\n    public async setPageSize(pageSize: number) {\n        await this.update(async () => {\n            return {pageSize};\n        });\n        await this.refreshData();\n    }\n\n    protected async loadInitialData(fromProps: IUserViewSelfProfileProps): Promise<void> {\n        await this.refreshData();\n    }\n\n    protected blank(): IUserViewSelfProfile {\n        return {\n            pageSize: DEFAULT_PAGE_SIZE,\n            starQuestions: new QuerySet<QuestionSummary>(),\n        };\n    }\n\n    protected rebind(): void {\n        this.state.starQuestions.parent = this;\n    }\n\n    protected async refreshData(): Promise<void> {\n        await this.update(async () => {\n            const starQuestions = await QuestionSummary.search(\"* topic:* is:star\", this.state.pageSize);\n            return {starQuestions};\n        });\n    }\n}\n","import * as React from \"react\";\nimport {QuerySetPaginator} from \"../../../components/common/fragments/querySetPaginator/querySetPaginator\";\nimport {LayoutContentContainer} from \"../../../components/layout/layoutContentContainer/layoutContentContainer\";\nimport {LayoutStandardHeader} from \"../../../components/layout/layoutStandardHeader/layoutStandardHeader\";\nimport {QuestionSummaryList} from \"../../../components/question/questionSummaryList/questionSummaryList\";\nimport {IUserViewSelfProfileProps, UserViewSelfProfile} from \"./userViewSelfProfile\";\n\nexport class UserViewSelfProfilePage extends React.Component<IUserViewSelfProfileProps> {\n    private data: UserViewSelfProfile;\n\n    constructor(props: IUserViewSelfProfileProps) {\n        super(props);\n        this.data = new UserViewSelfProfile(() => this.forceUpdate());\n    }\n\n    public componentDidMount() {\n        this.data.unload();\n        this.data = new UserViewSelfProfile(() => this.forceUpdate());\n        this.data.load(this.props);\n    }\n\n    public componentWillUnmount() {\n        this.data.unload();\n    }\n\n    public render() {\n        if (!this.guardInvalidState()) {\n            return \"\";\n        }\n\n        const starred = this.data.state.starQuestions;\n\n        return (\n            <div className={\"component--TopicHomePage\"}>\n                <LayoutStandardHeader user={this.props.user.state}\n                                      topic={null}\n                                      loading={this.data.updating}/>\n\n                <div>\n                    <LayoutContentContainer>\n                        <h3>Marked questions</h3>\n                    </LayoutContentContainer>\n\n                    <QuestionSummaryList questions={starred}/>\n\n                    <QuerySetPaginator allowedSizes={[1, 5, 10, 25]}\n                                       queryState={starred.state}\n                                       onChangeSize={this.onChangeSize}\n                                       onNext={this.onNext}\n                                       onPrev={this.onPrev}\n                                       error={starred.error}/>\n                </div>\n            </div>\n        );\n    }\n\n    public guardInvalidState(): boolean {\n        return this.data !== null;\n    }\n\n    private onChangeSize = (size: number) => this.data.setPageSize(size);\n\n    private onNext = () => this.data.next();\n\n    private onPrev = () => this.data.prev();\n}\n","import * as React from \"react\";\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport {UserContext} from \"../../../../react-pangul-core/src/domain/userContext\";\r\nimport {TopicAnswerQuestionPage} from \"../../pages/answer/topicAnswerQuestion/topicAnswerQuestionPage\";\r\nimport {TopicEditAnswerPage} from \"../../pages/answer/topicEditAnswer/topicEditAnswerPage\";\r\nimport {GenericHelpPage} from \"../../pages/generic/genericHelpPage/genericHelpPage\";\r\nimport {GenericLogoutPage} from \"../../pages/generic/genericLogoutPage/genericLogoutPage\";\r\nimport {TopicAskQuestionPage} from \"../../pages/question/topicAskQuestion/topicAskQuestionPage\";\r\nimport {TopicEditQuestionPage} from \"../../pages/question/topicEditQuestion/topicEditQuestionPage\";\r\nimport {TopicViewQuestionPage} from \"../../pages/question/topicViewQuestion/topicViewQuestionPage\";\r\nimport {TopicDiscoverPage} from \"../../pages/topic/topicDiscover/topicDiscoverPage\";\r\nimport {TopicEditPage} from \"../../pages/topic/topicEdit/topicEditPage\";\r\nimport {TopicSearchPage} from \"../../pages/topic/topicSearch/topicSearchPage\";\r\nimport {UserViewSelfProfilePage} from \"../../pages/user/userViewProfile/userViewSelfProfilePage\";\r\n\r\nexport interface IAppRoutes {\r\n    user: UserContext;\r\n}\r\n\r\nexport class AppRoutes extends React.Component<IAppRoutes> {\r\n    public render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact={true} path=\"/\" render={this.discoverTopics}/>\r\n                    <Route exact={true} path=\"/help\" render={this.help}/>\r\n                    <Route exact={true} path=\"/self\" render={this.self}/>\r\n                    <Route exact={true} path=\"/logout\" render={this.logout}/>\r\n                    <Route exact={true} path=\"/t/:name\" render={this.searchTopic}/>\r\n                    <Route exact={true} path=\"/t/:name/search/:query\" render={this.searchTopicWithQuery}/>\r\n                    <Route exact={true} path=\"/t/:name/edit\" render={this.editTopic}/>\r\n                    <Route exact={true} path=\"/t/:name/ask\" render={this.askQuestion}/>\r\n                    <Route exact={true} path=\"/t/:name/:questionId\" render={this.viewQuestion}/>\r\n                    <Route exact={true} path=\"/t/:name/:questionId/edit\" render={this.editQuestion}/>\r\n                    <Route exact={true} path=\"/t/:name/:questionId/answer\" render={this.answerQuestion}/>\r\n                    <Route exact={true} path=\"/t/:name/:questionId/answer/:answerId/edit\" render={this.editAnswer}/>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n\r\n    private help = () => (\r\n        <GenericHelpPage/>\r\n    )\r\n\r\n    private logout = () => (\r\n        <GenericLogoutPage user={this.props.user}/>\r\n    )\r\n\r\n    private self = () => (\r\n        <UserViewSelfProfilePage user={this.props.user}/>\r\n    )\r\n\r\n\r\n    private discoverTopics = () => (\r\n        <TopicDiscoverPage user={this.props.user} search=\"*\"/>\r\n    )\r\n\r\n    private searchTopicWithQuery = (props: any) => {\r\n        return (\r\n            <TopicSearchPage user={this.props.user} topic={props.match.params.name} search={props.match.params.query}/>\r\n        );\r\n    }\r\n\r\n    private searchTopic = (props: any) => (\r\n        <TopicSearchPage user={this.props.user} topic={props.match.params.name} search=\"*\"/>\r\n    )\r\n\r\n    private editTopic = (props: any) => (\r\n        <TopicEditPage user={this.props.user} topic={props.match.params.name}/>\r\n    )\r\n\r\n    private askQuestion = (props: any) => (\r\n        <TopicAskQuestionPage user={this.props.user}\r\n                              topic={props.match.params.name}/>\r\n    )\r\n\r\n    private viewQuestion = (props: any) => (\r\n        <TopicViewQuestionPage user={this.props.user}\r\n                               topic={props.match.params.name}\r\n                               question={props.match.params.questionId}/>\r\n    )\r\n\r\n    private editQuestion = (props: any) => (\r\n        <TopicEditQuestionPage user={this.props.user}\r\n                               topic={props.match.params.name}\r\n                               question={props.match.params.questionId}/>\r\n    )\r\n\r\n    private editAnswer = (props: any) => (\r\n        <TopicEditAnswerPage user={this.props.user}\r\n                             topic={props.match.params.name}\r\n                             question={props.match.params.questionId}\r\n                             answer={props.match.params.answerId}/>\r\n    )\r\n\r\n    private answerQuestion = (props: any) => (\r\n        <TopicAnswerQuestionPage user={this.props.user}\r\n                                 topic={props.match.params.name}\r\n                                 question={props.match.params.questionId}/>\r\n    )\r\n}\r\n","import * as React from \"react\";\nimport {BrowserRouter, Switch} from \"react-router-dom\";\nimport {UserContext} from \"../../../../react-pangul-core/src/domain/userContext\";\nimport {LayoutTheme} from \"../../components/layout/layoutTheme/layoutTheme\";\nimport {configureApplication, ISettings} from \"../../infrastructure/service/settingsProvider\";\nimport {GenericLoginPage} from \"../../pages/generic/genericLoginPage/genericLoginPage\";\nimport {AppAuth} from \"../appAuth/appAuth\";\nimport {AppRoutes} from \"../appRoutes/appRoutes\";\n\nexport interface IPangul {\n    settings: ISettings;\n}\n\nexport interface IPangulState {\n    user: UserContext;\n}\n\nexport class Pangul extends React.Component<IPangul, IPangulState> {\n    constructor(props: IPangul) {\n        super(props);\n        this.state = {\n            user: new UserContext(),\n        };\n    }\n\n    public componentDidMount() {\n        configureApplication(this.props.settings);\n    }\n\n    public render() {\n        return (\n            <LayoutTheme>\n                <AppAuth user={this.state.user}\n                         renderLoggedIn={this.showContent}\n                         renderLoggedOut={this.showLoginForm}/>\n            </LayoutTheme>\n        );\n    }\n\n    private showLoginForm = () => (<GenericLoginPage user={this.state.user}/>);\n\n    private showContent = () => {\n        return !this.props.settings.test.test\n            ? this.showMainContent()\n            : this.showTestContent();\n    }\n\n    private showMainContent = () => (<AppRoutes user={this.state.user}/>)\n\n    private showTestContent = () => {\n        if (this.props.settings.test.testContent == null) {\n            return <React.Fragment/>;\n        }\n        return (\n            <BrowserRouter>\n                <Switch>\n                    {this.props.settings.test.testContent(this.state.user)}\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n","import * as React from 'react';\nimport {Pangul} from \"./packages/react-pangul-app/src/app/pangul/pangul\";\nimport {ISettings} from \"./packages/react-pangul-app/src/infrastructure/service/settingsProvider\";\nimport {UserViewSelfProfilePage} from \"./packages/react-pangul-app/src/pages/user/userViewProfile/userViewSelfProfilePage\";\nimport {UserContext} from \"./packages/react-pangul-core/src/domain/userContext\";\n\nexport interface IApp {\n    settings: ISettings\n}\n\nexport class App extends React.Component<IApp> {\n    public render() {\n        const settings = {...this.props.settings, textContent: this.testContent};\n        return (\n            <Pangul settings={settings}/>\n        );\n    }\n\n    private testContent = (user: UserContext) => (\n        <React.Fragment>\n            <UserViewSelfProfilePage user={user}/>\n        </React.Fragment>\n    )\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {App} from './App';\nimport {ISettings} from \"./packages/react-pangul-app/src/infrastructure/service/settingsProvider\";\nimport AjaxFetch from './packages/react-pangul-core/src/infrastructure/fetch/ajaxFetch';\nimport registerServiceWorker from './registerServiceWorker';\n\nnew AjaxFetch(\"/\").get<ISettings>(\"config.json\").then((settings: ISettings) => {\n    ReactDOM.render(\n        <App settings={settings}/>,\n        document.getElementById('root') as HTMLElement\n    );\n    registerServiceWorker();\n});\n\n"],"sourceRoot":""}